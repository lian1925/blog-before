[{"title":"观卦 | 易经","date":"2017-10-12T06:55:34.000Z","path":"2017/10/12/yi-20-guan/","text":"观:盥(guan)而不荐,有孚顒(yong)若。【译】《观卦》象征瞻仰:瞻仰了祭祀开头盛大的倾酒灌地的降神仪式,就可以不去看 后面的献饗之礼了,因为这时心中已经充满了诚敬肃穆的情绪。《象》曰:风行地上,观;先王以省方观民设教。【译】《象辞》说:《观卦》的卦象是坤(地)下巽(风)上,为风吹拂于地上而遍及万 物之表象,象征瞻仰。先代君王仿效风吹拂于地而遍及万物的精神,视察四方,留心民 风民俗,用教育来感化民众。 初六,童观,小人无咎,君子吝。【译】初六,像幼稚的儿童一样观察景物,这对无知的庶民来说,不会有害处,但对担 任教化重任的君子来说,就未免有所憾惜。 《象》曰:初六,“童观”,小人道也。【译】《象辞》说:《观卦》的第一位(初六),“像幼稚的儿童一样观察景物”,这是浅 薄的小人之道。 六二,闚(kui)观,利女贞。【译】六二,由门缝中偷观景物,有利于妇女保持节操,坚持正道。 ￼《象》曰:“闚观,女贞”,亦可丑也。【译】《象辞》说:“由门缝中偷观景物,对于妇女来说有利于坚持正道,固守贞操”, 但对男子汉来说,这样的行为就丢丑了。 六三,观我生,进退。【译】对照高尚的道德标准来省察自己的言行,审时度势,小心谨慎地决定进退。 《象》曰:“观我生,进退”,未失道也。【译】《象辞》说:“对照高尚的道德标准省察自己的言行,审时度势,小心谨慎地决定 进退”,这样做是不失原则的。 六四,观国之光,利用宾于王。【译】六四,瞻仰一个国家的文治武功,有利于成为君王的宾客和辅佐。 《象》曰:“观国之光”,尚宾也。【译】《象辞》说:“瞻观一个国家的文治武功”,说明此国崇尚贤士。 九五,观我生,君子无咎。【译】九五,对照高尚的道德标准省察自己的言行,不断地完善自己,君子就不会有祸 患。 《象》曰:“观我生”,观民也。【译】《象辞》说:“对照高尚的道德标准,审察自己的言行,弄清自己的德行”,便可知万民的德行。 ￼￼上九,观其生,君子无咎。【译】上九,君子时刻瞻仰君主的德行和作为,并按照君主的德行和作为行事,这样才不会有祸患。 《象》曰:“观其生”,志未平也。【译】《象辞》说:“君子时刻瞻仰君主的德行和作为”,因为君子始终以天下为己任,天下未安,其志难平。"},{"title":"临卦 | 易经","date":"2017-10-12T06:52:47.000Z","path":"2017/10/12/yi-19-lin/","text":"临:元,亨,利,贞。至于八月有凶。【译】《临卦》象征督导:能亨通无阻,祥和有益,坚守正道。但是到了八月(阳衰阴 盛),会有凶险。《象》曰:泽上有地,临;君子以教思无穷,容保民无疆。【译】《象辞》说:《临卦》的卦象是兑(泽)下坤(地)上,为地在泽上之表象。泽上 有地,地居高而临下,象征督导。君子由此受到启发,费尽心思地教导人民,并以其无 边无际的盛德保护人民。 初九,咸临,贞吉。【译】初九,感应尊贵者,使其行督导之责。可获吉祥。 《象》曰:“咸临,贞吉”,志行正也。【译】《象辞》说:“感应尊贵者,使其行督导之责,可获吉祥”,说明其志向和行为都 很正派。 九二,咸临,吉,无不利。【译】九二,“感应尊贵者,使其行督导之责,可获吉祥”,不会有什么不利。 《象》曰:“咸临,吉,无不利”,未顺命也。【译】《象辞》说:“感应尊贵者,使其行督导之责,可获吉祥,不会有什么不利”,这 是由于不囿于命运安排的樊笼,自身努力的结果。 六三,甘临,无攸利;既忧之,无咎。【译】六三,居高临下,靠甜言蜜语去督导,必无所利;但是,已经觉悟,能忧惧改过, 就不会有祸害。 《象》曰:“甘临”,位不当也。“既忧之”,咎不长也。【译】《象辞》说:“居高临下,靠甜言蜜语去督导”,这是因为六三爻位置不当的缘故。 但是,“已经觉悟,能忧惧改过”,危害就不会长久了。 ￼￼六四,至临,无咎。【译】六四,亲善地督导下级,则必然没有祸害。 《象》曰:“至临,无咎”位当也。【译】《象辞》说:“亲善的督导下级,则必然没有祸害”,这是因为六四爻位置确当的 缘故。 六五,知临,大君之宜,吉。【译】六五,以聪明才智来实行督导,这是伟大君主最适宜的统治之道,能获得吉祥。 《象》曰:“大君之宜”,行中之谓也。【译】《象辞》说:“以聪明才智来实行督导,这是伟大君主最适宜的统治之道”,说的 就是行中庸之道。 上六,敦临,吉,无咎。【译】上六,温柔敦厚地实行督导,能获得吉祥,没有危害。 《象》曰:“敦临之吉”,志在内也。【译】《象辞》说:“温柔敦厚地实行督导,能获得吉祥”,说明其志在于利国利家(在内)。"},{"title":"蛊卦 | 易经","date":"2017-10-12T06:49:47.000Z","path":"2017/10/12/yi-18-gu/","text":"蛊:元亨,利涉在川;先甲三日,后甲三日。【译】《蛊卦》象征救弊治乱,拨乱反正:从开始就很亨通,有利于涉越大河。不过, 在做大事以前,要考察现状、分析事态;在做大事以后,要讲究治理措施,预计到后果。《象》曰:山下有风,蛊;君子以振民育德。【译】《象辞》说:《蛊卦》的卦象是巽(风)下艮(山)上,为山下起大风之表象,象 征救弊治乱、拨乱反正。这时候,君子救济人民,培育美德,纠正时弊。 初六,干父之蛊,有子考,无咎;厉终吉。【译】初六,挽救父辈所败坏了的基业,由能干的儿子来继承父辈的事业,必无危害; 即使遇到艰难险阻,只要努力奋斗,最终必获吉祥。 《象》曰:“干父之蛊”,意承考也。【译】《象辞》说:“挽救父辈所败坏了的基业”,表明其志在继承父辈的遗业。 ￼￼九二,干母之蛊,不可贞。【译】九二,救治母辈所造成的弊病,要耐心等待,如果时机不成熟的话,就要坚守正 道等待时机。 《象》曰:“干母之蛊”,得中道也。【译】《象辞》说:“救治母辈所造成的弊病”,刚柔适中,既要顺应,又要匡救,不可 偏颇。 九三,干父之蛊,小有悔,无大咎。【译】九三,要挽救父辈败坏了的基业,其间必发生失误,因而会产生懊悔,但不会有 大的危害。 《象》曰:“干父之蛊”,终无咎也。【译】《象辞》说:“挽救父辈败坏了的基业”,最终不会有祸害。 六四,裕父之蛊,往见吝。【译】六四,宽缓地挽救父辈败坏了的基业,往前发展,必然会因耽误时机遗憾惋惜。 《象》曰:“裕父之蛊”,往未得也。【译】《象辞》说:“宽缓地挽救父辈所败坏了的基业”,往前发展,难以达到挽救的效 果。 六五,干父之蛊,用誉。【译】六五,挽救父辈败坏的基业,一定会受到人们的赞誉。 《象》曰:“干父用誉”,承以德也。【译】《象辞》说:“挽救父辈所败坏的基业,一定会受到人们的赞誉”,因为以美德继 承父辈的遗业,总是会受到欢迎的。 上九,不事王侯,高尚其事。【译】上九,不侍奉王侯,超然物外,孤芳自赏,使自己的德行至高无上。 《象》曰:“不事王侯”,志可则也。【译】《象辞》说:“不侍奉王侯”,这高洁的志向,可作为人们学习的准则。"},{"title":"随卦 | 易经","date":"2017-10-12T06:46:15.000Z","path":"2017/10/12/yi-17-sui/","text":"随:元,亨,利,贞,无咎。【译】《随卦》象征随从,随和:如果随从、随和,便能始终亨通,和谐有利。固守正 道,没有任何危险。 ￼￼《象》曰:泽中有雷,随;君子以向晦入宴息。【译】《象辞》说:《随卦》的卦象是震(雷)下兑(泽)上,为泽中有雷之表象。泽中 有雷声,泽随从雷声而震动,这便象征随从。君子行事要遵从合适的作息时间。白天出 处辛劳工作,夜晚就回家睡觉安息。 初九,官有渝,贞吉。出门交,有功。【译】初九,思想随时代而变化,坚持正道可获吉祥。出门交朋友,一定能成功。 《象》曰:“官有渝”,从正吉也;“出门交,有功”,不失也。【译】《象辞》说:“思想随时代而变化”,但无论怎么变,都必然始终遵从正道,这样 就可以获得吉祥。“出站交朋友,一定能成功”,这是因为其唯正是从,见善则从,没有 过失的缘故。 六二,係小子,失丈夫。【译】六二,倾心随从于年轻小子,则会失去了阳刚方正的丈夫。 《象》曰:“係小子”,弗兼与也。【译】《象辞》说:“倾心随从于年轻小子则会失去阳刚方正的丈夫”,因为二者是互相 排斥的,是不可兼得的。 六三,係丈夫,失小子。随有求得,利居贞。【译】六三,随从阳刚方正的丈夫行事,则必然丢失年轻小子。随从于丈夫,有求必得, 有利于安居乐业,坚守妇道,贞节处世。 《象》曰:“係丈夫”,志舍下也。【译】《象辞》说:“随从阳刚方正的丈夫行事”,专心不二,说明其志在于舍弃下方的 年轻小子。 九四,随有获,贞凶;有孚在道,以明,何咎!【译】九四,他人追随自己,虽有收获,但有可能发生凶险。虽有凶险,但只要心存诚 信,不违正道,使自己的美德显明,那还有什么危害呢? 《象》曰:“随有获”,其义凶也。“有孚在道”,明功也。【译】《象辞》说:“他人追随自己,虽有收获”,但因居位不当,有“震主”之嫌,所 以可能有凶险。但只要“心存诚信,不违正道”,则可逢凶化吉,这是由于立身光明磊 落所带来的功效。 九五,孚于嘉,吉。【译】九五,把诚信带给诚实善良之人,可获吉祥。 《象》曰:“孚于嘉,吉”,位正中也。【译】《象辞》说:“把诚信带给诚实善良之人,可获吉祥”,这是因为九五爻得正居中, 不倚不偏。 ￼￼上六,拘係之,乃从,维之;王用亨于西山。【译】上六,只有拘禁起来强迫、命令他,他才不得不顺服追随,再用绳索捆绑紧,才 能追随到底。君王在西山设祭,要出师讨伐那些不顺从的人。 《象》曰:“拘係之”,上穷也。【译】《象辞》说:“只有拘禁起来强迫、命令他,他才不得不顺服追随”,这是因为上 六爻高居《随卦》最上爻,物极必反的缘故。"},{"title":"豫卦 | 易经","date":"2017-10-12T06:05:28.000Z","path":"2017/10/12/yi-16-yu/","text":"豫:利建侯行师。【译】《豫卦》象征欢乐愉快:有利于建立诸侯的伟大功业,有利于出师南征北战。《象》曰:雷出地奋,豫。先王以作乐崇德,殷荐之上帝,以配祖考。【译】《象辞》说:《豫卦》的卦象为坤(地)下震(雷)上,为地上响雷之表象。雷在 地上轰鸣,使大地振奋起来,这就是大自然愉快高兴的表现。上古圣明的君主,根据大 自然欢乐愉快时雷鸣地震的情景创造了音乐,并用音乐来崇尚推广伟大的功德。他们以 盛大隆重的仪礼,把音乐献给天帝,并用它来祭祀自己的祖先。 初六,鸣豫,凶。【译】初六,自鸣得意,高兴过了头,结果乐极生悲,必遭凶险。 《象》曰:初六,“鸣豫”,志穷凶也。【译】《象辞》说:《豫卦》的第一位(初六),“自鸣得意,高兴过了头”,说明它没有 雄心壮志,志向容易满足。一满足,就得意忘形,结果必遭凶险。 ￼￼六二,介于石,不终日,贞吉。【译】六二,正直而不同流合污的品德坚如磐石,还不到一天时间,就明白了欢乐愉快 的深刻道理,能守正必获吉祥。 《象》曰:“不终日,贞吉”,以中正也。【译】《象辞》说:“还不到一天时间,就明白了愉快欢乐的深刻道理,能守正必获吉 祥”,这是因为能居中守正,在欢乐中既不过分,也不会不满足,因而获得吉祥。 六三,盱(xu)豫悔;迟有悔。【译】六三,有谄媚奉承暗送秋波的手段取悦于上司,以求得自己的欢乐,这势必导致 悔恨。如若执迷不悟,悔恨不及时,就会招致更大的悔恨。 《象》曰:“盱豫有悔”,位不当也。【译】《象辞》说:“用谄媚奉承、暗送秋波的手段取悦于上司,以求得自己欢乐,这势 必导致悔恨”,这是由于六三爻所处位置不正的缘故。 九四,由豫,大有得;勿疑,朋盍(he)簪(zan)。【译】九四,人们由于他而得到欢乐愉快,大有所获;毋庸置疑,朋友们会像头发汇聚 于簪子一样,积聚在他周围。 《象》曰:“由豫,大有得”,志大行也。【译】《象辞》说:“人们由于得到欢乐愉快,大有所获”,表明九四爻的阳刚之志,可 以放手实现。 六五,贞疾,恒不死。【译】六五,国中出现了不少弊病,但仍能长时间地支持下去而不致灭亡。 《象》曰:六五“贞疾”,乘刚也;“恒不死”,中未亡也。【译】《象辞》说:《豫卦》的第五爻位(六五)指出,“国中出现了不少弊病”,但有刚 强之臣辅佐,“仍能长时间地支持下去而不致灭亡”,这是因为它居中,只要保持中庸, 就会长时间地坚持下去而不致于灭亡。 上六,冥豫成,有渝无咎。【译】上六,已处在天昏地暗的局面之中,但却执迷不悟,仍沈溺于寻欢作乐之中,十 分危险。但只要及时觉悟,改弦易辙,则可避免祸害。 《象》曰:“冥豫”在上,何可长也?【译】《象辞》说:“已处在天昏地暗的局面之中,但却执迷不悟,仍沈溺于寻欢作乐之 中”,并高高在上,不察下情,这样的欢乐愉快怎能长久地保持呢?"},{"title":"谦卦 | 易经","date":"2017-10-12T05:46:18.000Z","path":"2017/10/12/yi-15-qian/","text":"谦:亨,君子有终。【译】《谦卦》象征谦虚:谦虚的美德可以使百事顺利,但谦虚并不是人人都能坚持下 去的,而只有君子才能坚持到底。《象》曰:地中有山,谦。君子以裒多益寡,称物平施。【译】《象辞》说:《谦卦》的卦象是艮(山)下坤(地)上,为高山隐藏于地中之表象, 象征高才美德隐藏于心中而不外露,所以称作谦。君子总是损多益少,衡量各种事物, 然后取长补短,使其平均。 初六,谦谦君子,用涉大川,吉。【译】初六,谦虚而又谦虚的君子,可以涉过大河(意思是能够克服一切困难,排除一 切障碍),最终必然安全吉祥。 《象》曰:“谦谦君子”,卑以自牧也。【译】《象辞》说:“谦虚而又谦虚的君子”,即使处于卑微的地位,也能以谦虚的态度 自我约束;而不因为位卑,就在品德方面放松修养。 六二,鸣谦,贞吉。【译】六二,谦虚的美名远扬四方,固守中正就可获得吉祥。 《象》曰:“鸣谦,贞吉”,中心得也。【译】《象辞》说:“谦虚的美名远扬四方,固守中正就可获得吉祥”,这是说六二爻以 心中纯正羸得名声,而不是靠沽名钓誉获取名声。 九三,劳谦君子,有终,吉。【译】九三,勤劳而谦虚的君子,必能把美德保持到底,最终一定是吉祥的。 《象》曰:“劳谦君子”,万民服也。【译】《象辞》说:“勤劳而又谦虚的君子,必能把美德保持到底”,所以天下的老百姓 都服从他。 六四,无不利,挥谦。【译】六四,没有任何不吉利,要发扬光大谦虚的美德。 《象》曰:“无不利,挥谦”,不违则也。【译】《象辞》说:“没有任何不吉利,要发扬光大谦虚的美德”这不违背谦虚导致亨通 的原则。 六五,不富,以其邻利用侵伐,无不利。【译】六五,虽不富有,但却虚怀若谷,有利于和近邻一起征伐那些骄傲蛮横不可一世 的人,不会有任何不吉利的结果。 《象》曰:“利用侵伐”,征不服也。【译】《象辞》说:“有利于出兵讨伐”,是指征伐那些骄横而不可一世的人。 上六,鸣谦,利用行师,征邑国。【译】上六,谦虚的美德远扬四方,有利于征伐邻近的小国。 ￼￼《象》曰:“鸣谦”,志未得也;“可用行师”,征邑国也。【译】《象辞》说:“谦虚的美名远扬四方”,但安邦定国之志未酬,所以“可用出师征 讨”的办法来惩处那些骄横不可一世的小国。"},{"title":"大有卦 | 易经","date":"2017-10-12T05:28:11.000Z","path":"2017/10/12/yi-14-dayou/","text":"大有:元亨。【译】《大有卦》象征大有收获:至为亨通。《象》曰:火在天上,“大有”;君子以遏(e)恶扬善,顺天休命。【译】《象辞》说:《大有卦》的卦象是乾(天)下离(火)上,为火在天上之表象。火 焰高悬于天上,象征太阳照耀万物,世界一片光明,农业大丰收,“大有收获”。君子在 这个时候要阻止邪恶,颂扬一切善行,顺应天命,替天行道,以保护万物性命。 初九,无交害,匪咎;艰则无咎。【译】初九,不互相来往,也不彼此伤害,没有什么祸患;要牢记过去的艰难困苦,才 能免于引起祸患。 《象》曰:大有初九,无交害也。【译】《象辞》说:《大有卦》的第一爻(初九),说明此时不互相往来,一动不如一静, 就不会有什么事非,自然没有什么祸患了。 九二,大车以载,有攸往,无咎。【译】九二,用大车装载着财物,送到前面的地方,必然没有什么祸患。 《象》曰:“大车以载”,积中不败也。【译】《象辞》说:“用大车装载着财物”,说明很富有,只要把财物放于车中,无论怎 样颠簸震荡,都不会倾覆。 九三,公用亨于天子,小人弗克。【译】九三,王公前来朝贺,向天子贡献礼品并致以敬意,小人不能担任如此重要的职 务。 《象》曰:“公用亨于天子”,小人害也。【译】《象辞》说:“王公前来朝贺,向天子贡献礼品并致以敬意”,小人若担任如此重 要的职务,必然发生变乱,成为祸害。 九四,匪其彭,无咎。【译】九四,虽然家财万贯,但不过分聚敛财物,就不会发生灾祸。￼￼六五,厥(jue)孚交加,威如,吉。【译】六五,以诚实守信的准则对外交往,对上尊敬,对下怀柔,必然增加个人的威信, 是吉祥的。 《象》曰:“厥孚交加”,信以发志也;“威如之吉”,易而无备也。【译】《象辞》说:“以诚实守信的准则对外交往,对上尊敬,对下怀柔”,说明以自己 的诚实信用感动别人,使别人也变得诚实守信起来;“必然增加个人的威信,是吉祥的”, 说明平易近人,纯真简朴,无所防备,反而使人人敬畏。 上九,自天佑之,吉无不利。【译】上九,上天保佑有德之人,赐福于己,吉祥,无往不利。 《象》曰:《大有》上吉,自天佑也。【译】《象辞》说:《大有卦》第六爻位(上九)的吉祥,是上天保佑有道德的人,是上 天赐给的福分,只有顺天应人,才能大有收获,得到大量的财富。"},{"title":"同人卦 | 易经","date":"2017-10-12T05:21:38.000Z","path":"2017/10/12/yi-13-tong/","text":"同人,同人于野,亨,利涉大川,利君子贞。【译】《同人卦》象征与人和睦相处:和别人亲密地走在宽广的原野上,亨通,有利于 渡过大河急流,有利于君子坚守正道。《象》曰:天与火,同人;君子以类族辨物。【译】《象辞》说:《同人卦》的卦象是离(为)下乾(天)上,为天下有火之表象。天 在高处,火势熊熊而上,天与火亲和相处,君子要明白物以类聚,人以群分的道理,明 辨事物,求同存异,团结众人以治理天下。 初九,同人于门,无咎。【译】初九,一出门便能与人和睦相处,不会有什么灾祸。 《象》曰:出门同人,又谁咎也!【译】《象辞》说:一出门便能与人和睦相处,又有谁会来危害你呢? 六二,同人于宗,吝。【译】六二,只和本宗本派的人和睦相处,必然会惹来一些麻烦。 ￼《象》曰:“同人于宗”,吝道也。【译】《象辞》说“只和本宗本派的人和睦相处”,不能团结各个阶层的人,这是引起麻 烦的根源。 九三,伏戎于莽,升其高陵,三岁不兴。【译】九三,把军队埋伏在密林草莽之中,占据附近的制高点频频瞭望,三年都不敢出 兵打仗。 《象》曰:“伏戎于莽”,敌刚也;“三岁不兴”,安行也?【译】《象辞》说:“埋伏军队在密林草莽中”,说明敌人力量强大,我方力量弱小,只 能潜伏下来。“三年都不敢兴兵打仗”,表明敌我力量相差悬殊,怎么敢冒险轻进呢? 九四,乘其墉,弗克攻,吉。【译】九四,准备登城向敌人进攻,但终于没有进攻,是吉祥的。 《象》曰:“乘其墉”,义弗克也,其“吉”,则困而反则也。【译】《象辞》说:“准备登城向敌人进攻”,但终于没有进攻,是因为发现这种进攻是 不仁义的,这样做能获得吉祥,是因为在困惑时能及时醒悟,反过来能按正确的办法行 事。 九五,同人,先号咷(tao),而后笑,大师克相遇。【译】九五,与人和睦相处,开始大声痛哭,后来破涕为笑,大军作战告捷,志同道合 者相会在一起。 《象》曰:同人之先,以中直也;大师相遇,天罔(wang)极上遇,言相克也。【译】《象辞》说:与人和睦相处,开始大声痛哭,说明这时内心中正诚信,因不知战 34 事的胜败而焦急痛哭;大军遇到了志同道合者,终于获得了战争的胜利,于是欢笑起来。 上九,同人于郊,无悔。【译】上九,在荒郊也愿与人和睦相处,未遇到志同道合者,也不后悔。 《象》曰:“同人于郊”,志未得也。【译】《象辞》说:“在荒郊也愿与人和睦相处,未遇到志同道合者”,说明此时团结众 人,而希望天下大同的愿望没有实现。"},{"title":"否卦 | 易经","date":"2017-10-12T05:13:49.000Z","path":"2017/10/12/yi-12-fou/","text":"否:否(pi)之匪人,不利,君子贞;大往小来。【译】《否卦》象征闭塞:一个卦闭的社会,人们之间的来往是不通畅的,天下没有便利之处,君子必须坚守正道;这时强大者离去,弱小者到来。《象》曰:天地不交,“否”;君子以俭德辟难,不可荣以禄。【译】《象辞》说:《否卦》的卦象为坤(地)下乾(天)上,为天在地上之表象。天在极高之处,地在极低之处,天地阴阳之间因而不能互相交合,所以时世闭塞不通,这时 候君子必须坚持勤俭节约的美德,以避开危险与灾难不能谋取高官及丰厚的俸禄,去追求荣华富贵。 ￼￼初六,拔茅茹,以其汇,贞吉,亨。【译】初六,拔起一把茅草,只见它们的根连在一起,物以类聚,找它们时要以其种类 来识别;结果是吉祥的,亨通。 《象》曰:“拔茅贞吉”,志在君也。【译】《象辞》说:“拔起茅草,其根相连,结果吉祥”,说明忠心耿耿,有为君主建功 立业的远大志向。 六二,包承,小人吉;大人否,亨。【译】六二,阿谀奉承有权势的人,小人因此获得吉祥;德高望重的大人物否定了阿谀 奉承,则是吉利的。 《象》曰:“大人否享”,不乱群也。【译】《象辞》说:“德高望重的大人物否定了阿谀奉承,则是吉利的”,因为德高望重 的大人物是不能与小人为伍的。 六三,包羞。【译】六三,由于受纵容而胡作非为,终于召致羞辱。 《象》曰:“包羞”,位不当也。【译】《象辞》说:“由于受纵容而胡作非为,终于召致羞辱”,说明此时处的位置不正。 九四,有命无咎,畴(chou)离祉。【译】九四,奉行天命,替天行道,开通闭塞,没有灾祸,大家互相依附都可以获得福 31 分。 《象》曰:“有命无咎”,志行也。【译】《象辞》说:“奉行天命,替天行道,开通闭塞没有灾祸”,说明要实现济困扶危 替天行道的志向。 九五,休否,大人吉;其亡其亡,系于苞桑。【译】九五,时世闭塞不通的局面将要停止,德高势隆的大人物可以获得吉祥;居安思 危,常常以“不久将要灭亡,不久将要灭亡”,这样的警句来提醒自己,才能像系结在 一大片丛生的桑树上那样牢固,安然无事。 《象》曰:“大人之吉”,位正当也。【译】《象辞》说:“德高势隆的大人物可以获得吉祥”,说明此时处于居中位置,合适 得当。 上九,倾否;先否后喜。【译】上九,时世闭塞不通的局面将要改变,发生了天翻地覆的变化;起初闭塞不通, 后来顺畅通达,大家欢喜高兴。 《象》曰:否终则倾,何可长也!【译】《象辞》说:闭塞到了极点必然要发生倾覆,物极必反,否极泰来,一种局面不 会长久持续不发生变化的!"},{"title":"泰卦 | 易经","date":"2017-10-12T04:45:33.000Z","path":"2017/10/12/yi-11-tai/","text":"泰:小往大来,吉,亨。【译】《泰卦》象征通达:这时弱小者离去,强大者到来,吉祥,亨通。 ￼￼《象》曰:天地交,泰;后以财成天地之道,辅相天地之宜,以左右民。【译】《象辞》说:《泰卦》的卦象为乾(天)下坤(地)上,地气上升,乾气下降,为 地气居于乾气之上之表象,阴阳二气一升一降,互相交合,顺畅通达;君主这时要掌握 时机,善于裁节调理,以成就天地交合之道,促成天地化生万物之机宜,护佑天下百姓, 使他们安居乐业。 初九,拔茅茹,以其汇,征吉。【译】初九,拔起了一把茅草,它们的根相连在一起,真是物以类聚,所以找它时要以 其种类而识别,往前行进是吉祥的。 《象》曰:拔茅征吉,志在外也。【译】《象辞》说:拔起一把茅草,往前行进可获吉祥,说明有远大的志向,有在外建 功立业的进取心。 九二,包荒,用冯河,不遐(xia)遗;朋亡,得尚于中行。【译】九二,有包容大川似的宽广胸怀,可以徒步涉过大河急流;礼贤下士,对远方的 贤德之人也不遗弃;不结成小团体,不结党营私,能够辅佐公正有道德的君主。 《象》曰:“包荒”,“得尚于中行”,以光在也。【译】《象辞》说:“有包容大川似的宽广胸怀”,“能够辅佐公正有道德的君主”,说明 自己光明正大,道德高尚。 ￼￼九三,无平不陂(po),无往不复;艰贞无咎,勿悔恤其孚,于食有福。【译】九三,没有平地不变为陡坡的,没有只出去不回来的,处在艰难困苦的环境中坚 守正道就没有灾害,不要怕不能取信于人,安心享用自己的俸禄是很有福分的。 《象》曰:“无往不复”,天地际也。【译】《象辞》说:“没有只出去而不回来的”,叶落归根,人回故乡,事物的正反两个 方面往往互相转化,表明此时正在天地交合的边沿,处于变化之中。 六四,翩翩不富,以其邻不戒以孚。【译】六四,像飞鸟连翩下降,虚怀若谷,这样与邻居相处,不互相戒备,彼此以诚相 见,讲求信用。 《象》曰:“翩翩不富”,皆失实也;“不戒以孚”,中心愿也。【译】《象辞》说:“像飞鸟从高处连翩下降,虚怀若谷”,说明此时不以个人的殷实富 贵为念;“与邻居相处,不互相戒备,彼此以诚相见,讲求信用”,因为这是大家内心共同的意愿。 六五,帝乙归妹,以祉元吉。【译】六五,商代帝王乙嫁出自己的女儿,因此得到了福分,是十分吉祥的事。 《象》曰:“以祉元吉”,中以行愿也。【译】《象辞》说:“帝乙把女儿嫁给贤德而又富裕的人家,因此获得了深厚的福分,是 29 在吉在利的事”,说明因为实现了长期以来心中祈求的意愿,所以结果是吉祥的。 上六,“城复于隍”;勿用师,自邑告命,贞吝。【译】上六,城墙倒塌在久已干涸的护城壕沟里;这时决不可进行战争,应减少繁琐的 政令,以防止可能出现的土崩瓦解的局面。 《象》曰:城复于隍,其命乱也。【译】《象辞》说:“城墙倒塌在久已干涸的护城壕沟里”,说明形势已经向错乱不利的 方面转化,其前景是不大美妙的。"},{"title":"履卦 | 易经","date":"2017-10-12T04:37:26.000Z","path":"2017/10/12/yi-10-lv/","text":"履:履虎尾,不咥(die)人,亨。【译】《履卦》象征小心行动:跟在老虎尾巴后面走路,老虎却没有回头咬人,当然 亨通顺利。 《象》曰:上天下泽,“履”;君子以辩上下,定民志。【译】《象辞》说:《履卦》的卦象是兑(泽)下乾(天)上,为天下有泽之表象。上 有天,下有泽,说明要处处小心行动,如行在沼泽之上,一不注意就会陷下去;君子要 深明大义,分清上下尊卑名分,坚定百姓的意志,遵循礼仪而行,必然秩序井然。 初九,素履,往无咎。【译】初九,心地纯朴,品行端正,处处小心行事,那么无论到什么地方都没有灾祸。 《象》曰:“素履之往”,独行愿也。【译】《象辞》说:“心地纯朴,品行端正,处处小心行事”,表明要专心致志,遵循 礼仪实现自己的意愿。 九二,履道坦坦,幽人贞吉。【译】九二,小心行走在平坦宽广的大道上,幽居的人安于闲逸恬静的生活,结果是 吉祥的。 《象》曰:“幽人贞吉”,中不自乱也。【译】《象辞》说:“幽居的人可获吉祥”,说明自己内心平静自然毫不紊乱,循礼仪 而行的信念坚固。 六三,眇能视,跛能履。履虎尾咥人,凶;武人为于大君。【译】六三,眼睛快要瞎了,但勉强能看到一点点;腿跛了,但勉强能走几步。不小 心踩在老虎尾巴上,老虎回头就咬人,凶险;勇敢的武士要竭力为君主效劳。 《象》曰:“眇能视”,不足以有明也;“跛能履”,不足以与行也;“咥人之凶”,位不当也;“武人为于大君”,志刚也。【译】《象辞》说:“眼睛快瞎了,但勉强能看到一点点”,不足以分辩事物;“腿跛了, 但勉强能走几步”,不能出外远行;“老虎咬人是凶险的”,表明这时处的位置很不妥当, 竟然踩在老虎尾巴上。“武士要竭力为君主效劳”,表明武士的志向刚强。 九四,履虎尾,愬愬,终吉。【译】九四,跟在老虎尾巴后面走路,感到恐惧害怕,但谨慎小心,终于得到吉祥。 ￼￼《象》曰:“愬愬终吉”,志行也。【译】《象辞》说:“感到恐惧害怕,但谨慎小心,终久获得吉祥”,说明小心遵循礼 仪而行就能实现自己的志愿。 九五,夬履,贞厉。【译】九五,刚毅善于作出决断,小心行动,要提防危险。 《象》曰:“夬履贞厉”,位正当也。【译】《象辞》说:“刚毅果断,小心行动,要提防危险”,说明此时虽处于正当的位 置,但也不能疏忽大意。 上九,视履考祥,其旋元吉。【译】上九,回头看看走过的路,详细察看一下吉凶祸福,转身来顺应阴柔自然之道, 这样是吉祥的。 《象》曰:元吉在上,大有庆也。【译】《象辞》说:极为吉祥,高居尊上之位,表明有大的福分值得庆祝。"},{"title":"小畜卦 | 易经","date":"2017-10-12T04:32:34.000Z","path":"2017/10/12/yi-9-xiaoxu/","text":"小畜:亨;密云不雨,自我西郊。【译】《小畜卦》象征小有积蓄:亨通顺利;天空布满浓密的积云,但还没有下雨, 云气是从城西郊区升起来的。 《象》曰:风行天上,“小畜”;君子以懿(yi)文德。【译】《象辞》说:《小畜卦》的卦象是乾(天)下巽(风)上,是风飘行天上的表象。 风在天上吹,密云不雨,气候不好不坏,收成一般,所以只能“小有积蓄”;君子面对 这种情况,于是修养美好的品德,用心做好文章等待发达的时机。 初九,复自道,何其咎?吉。【译】初九,自己从原路返回,哪里会有什么灾害呢?吉祥。 《象》曰:“复自道”,其义吉也。【译】《象辞》说:“自己从原路返回”,表明这行动很适宜,符合常理,因而吉祥。 九二,牵复,吉。【译】九二,带着别人一道从原路返回,吉祥。 《象》曰:牵复在中,亦不自失也。【译】《象辞》说:带着别人从原路返回,表明此时处于居中位置,自己不会失掉阳 刚的德行。 九三,舆(yu)说辐(fu),夫妻反目。【译】九三,行在半路上,忽然大车的辐条从车轮中脱出来,车不能再行了,回到家 里,夫妻因此大吵大闹着要离婚。 ￼￼《象》曰:夫妻反目,不能正室也。【译】《象辞》说:结发夫妻吵闹着要离婚,说明丈夫不能以家规要求妻子,自己也 没有给妻子做出表率,所以妻子不守妇道。 六四,有孚;血去惕出,无咎。【译】六四,具有诚实守信的德行,互相信任;抛弃忧患意识与戒备心理,这样就没 有灾祸。 《象》曰:“有孚惕出”,上合志也。【译】《象辞》说:“具有诚信之德并抛弃戒备心理”表明这样符合居于尊上地位的权 势者的意愿。 九五,有孚挛(luan)如,富以其邻。【译】九五,具有诚信的德行,与别人紧密联系并互相帮助,自己致富也要使邻人跟 着一同富起来。 《象》曰:“有孚挛如”,不独富也。【译】《象辞》说:“具有诚信的德行与别人紧密联系并互相帮助”,表明要与人共同 富裕,不独自享受富贵。 上九,既雨既处,尚德载;妇贞厉,月几望;君子征凶。【译】上九,下起了细雨,但不久又停下来,阳刚者的德行被阴气所弥漫掩盖;这时 妇人要坚守正道,因为十五月圆十六就开始亏了,要小心防备危险。君子要出外远行,必有凶险。 《象》曰:“既雨既处”,德积载也;“君子征凶”,有所疑也。【译】《象辞》说:“下起了细雨,但不久又停下来”,表明这时阴气弥漫掩盖了阳刚之德;“君子外出远行必遭凶险”,说明阴湿之气聚集,到处一片茫茫,方向不清,情况 不明,自然会发生危险。"},{"title":"扩展package | PXT","date":"2017-10-11T13:09:03.000Z","path":"2017/10/11/pxt-package-extends/","text":"ExtensionsA package may have an associated editor extension hosted in the Github Pages section of the repo. pxt-neoanim is an example of specialized NeoPixel animation editor. ConfigurationThe extension is configured in the pxt.json file by adding an extension field: { ... extension: {} } The editor will automatically add an “Editor” button for the extension in the package category. ProtocolThe editor and the extension IFrame communicate via a protocol of IFrame messages. messages have a unique id used to correlate response to requests. a response message can be requested. The id identifer can be used to correlate a receive response to the original query. all message sent by the extension must contain the extension id, extId. This identifier is passed when loading the IFrame (see Initialization) // sending message var msg = { id: Math.random().toString(), type: \"pxtpkgext\", action: \"extinit\", extId: extId, response: true } window.parent.postMessage(msg, \"*\"); // handle the response function receivedResponse(resp) { if (resp.action === \"extinit\") console.log('initialized!') } window.addEventListener(\"message\", function(ev) { var resp = ev.data; if (resp && resp.type === \"pxtpkgext\") receivedResponse(resp); }, false); InitializationWhen the user presses the extension button, The GitHub pages site is loaded in an IFrame with an extension id in the hashmark, e.g. https://microsoft.github.io/pxt-neoanim/#extid for the package https://github.com/Microsoft/pxt-neoanim. ~ hintStore the extension id as it needs to be used in every message. var extId = window.location.hash.substr(1); ~ Once fully loaded, the extension sends a extinit message to the parent window var msg = { id: Math.random().toString(), type: \"pxtpkgext\", action: \"extinit\", extId: extId } ... Read and write codeThe extension can read (extreadcode) and write (extwritecode) a dedicated TypeScript and JSON file in the project. The JSON file is designed to store rich metadata while the TypeScript is the “code behind” that gets executed. This feature does not require permissions. write code var msg = { id: Math.random().toString(), type: \"pxtpkgext\", action: \"extwritecode\", extId: extId, body: { code: \"// generated TypeScript code\", json: \"serialized JSON here\" } } ... read code var id = Math.random().toString(); var msg = { id: id, type: \"pxtpkgext\", action: \"extreadcode\", extId: extId, response: true } ... function receivedResponse(resp) { if (resp.action === \"extreadcode\" && resp.id === id && resp.body) { var ts = resp.body.code; var json = JSON.parse(resp.body.json); ... } } ... Read and write user codeThe extusercode message requests to read the entire set of files in the project. The user will be prompted to give permission. If successfull, the response contains a resp field with a map of the file names to file contents. export interface UserCodeResponse extends ExtensionResponse { /* A mapping of file names to their contents */ resp?: { [index: string]: string }; } Data streamsWhen available, the editor may stream data coming from the devices. The extdatastream message requests to stream data. The user will be prompted to give permission. The following message requests for serial messages: var msg { ... action: \"extdatastream\", body: { serial: true } } ... If successful, the editor will proxy serial messages to the editor IFrame."},{"title":"配置package | PXT","date":"2017-10-11T13:07:05.000Z","path":"2017/10/11/pxt-package-pxtjson/","text":"pxt.json Manual PageA PXT package lives in its own directory, locally under libs/ in a PXT target. A packageis described by the pxt.json file. Here is the pxt.json file for the pxt-neopixel package: https://github.com/Microsoft/pxt-neopixel The pxt.json is described by the interface PackageConfig: interface PackageConfig { name: string; // public:true -> name must match ^[a-z][a-z0-9\\-_]+ description?: string; // longer description of package license?: string; // name of license (as found on github) authors?: string[]; files: string[]; // files to be included and compiled in package additionalFilePath?: string; // another directory to find files from dependencies: Map; // package dependencies (see below for more) public?: boolean; // set true to enable the package to be published (to cloud), // in support of publishing user scripts icon?: string; // url to icon -- support for built-in packages only card?: CodeCard; documentation?: string; // doc page to open when loading project // semver description for support target version version?: string; installedVersion?: string; targetVersions?: TargetVersions; // versions of the target/pxt the package was compiled against testFiles?: string[]; simFiles?: string[]; binaryonly?: boolean; platformio?: PlatformIOConfig; yotta?: YottaConfig; gistId?: string; } dependencies (on other packages)Simple packages generally just depend on their target’s core package: \"dependencies\": { \"core\": \"file:../core\" } A number of targets use http://github.com/microsoft/pxt-common-packages and specializethem to fit their target’s needs. For example, the Adafruit Circuit Playground Expresspackage is the union of a number of packages. \"dependencies\": { \"core\": \"file:../core\", \"buttons\": \"file:../buttons\", \"accelerometer\": \"file:../accelerometer\", \"lightsensor\": \"file:../lightsensor\", \"thermometer\": \"file:../thermometer\", \"music\": \"file:../music\", \"light\": \"file:../light\", \"switch\": \"file:../switch\", \"infrared\": \"file:../infrared\", \"microphone\": \"file:../microphone\", \"touch\": \"file:../touch\" } Each of the above packages is local to the target but inherits code from microsoft/pxt-common-packages,which it can then override or specialize, as the target needs. For example, the button packagein the target microsoft/pxt-adafruit is defined in terms of the button package frommicrosoft/pxt-common-packages using the additionalFilePath field: { \"name\": \"buttons\", \"description\": \"Button A and B drivers\", \"files\": [ \"README.md\", \"buttons.cpp\", \"shims.d.ts\", \"enums.d.ts\" ], \"testFiles\": [ \"test.ts\" ], \"additionalFilePath\": \"../../node_modules/pxt-common-packages/libs/buttons\", \"public\": true, \"dependencies\": { \"core\": \"file:../core\" } } The additionalFilePath field refers to the node_modules directory of the target."},{"title":"package起步 | PXT","date":"2017-10-11T13:05:09.000Z","path":"2017/10/11/pxt-package-start/","text":"Building your own packageStep 0: Local server setupIn order to build and test your package locally, you need to setup PXT to run locally.Follow the instructions on setting up workspace. Step 1: GitHub setupYou will need to get a GitHub account and create a GitHub repository. At this time, other repository hosting solutions (GitLab, Bitbucket, etc.) are not supported. Let’s say you want to create a package called banana for target TARGET. create (do not clone) a fresh GitHub repository pxt-banana clone this repository into pxt-banana under the projects folder go to the cloned folder and run pxt init; follow the prompts edit pxt.json and README.md with the right descriptions commit files to git: git add ., and commit them: git commit -m &quot;Initial&quot; Make sure you keep the line for PXT/TARGET (where TARGET is the target id) in README.md. Otherwise the package will not show up in search. Step 2: Developing packageNow, you’re ready to develop your package. You can do it with VSCodeor from the web editor served from pxt serve. put the contents of your package in main.ts add a sample program using the package in test.ts use pxt to build and deploy the package with tests; use the web editor to test in the simulator You will develop your package in pxt-banana, and then test this work by creating a second project (called, perhaps, “Just Look At It”) which includes a reference to pxt-banana. ~ hintIf the local editor fails to open, copy the URL printed in the console and open it in your favorite browser. The local server requires a security token embedded in the URL to serve pages. ~Step 3: TestingIn order to test your package, you need to create a new project, and manually add a reference back to the package you’ve been developing. Open the local editor and create a new project. For example, you might call it Just Look At It. Open the project settings by clicking the gear (Gear -&gt; Project Settings) Click on Edit Settings As Text Add an entry under dependencies that points to your package folder: { &quot;name&quot;: &quot;banana test&quot;, &quot;dependencies&quot;: { ... &quot;banana&quot;: &quot;file:../pxt-banana&quot; }, ... } Reload the editor and the new blocks you developed in pxt-banana will be loaded into the project “Just Look At It.” Step 4: Publishing your packageWhen you’re happy with the first version of your package, commit the changes andbump the version and push to github: git commit -a -m &quot;Amazing flying bananas&quot; pxt bump The pxt bump will make sure there are no uncommited changes, bump the version number,create a git tag, and push everything to github. In the editor, paste the full URL to your repo after selecting More -&gt; Add package.... Your package should show up. Step 5: ApprovalIn order to be searchable by users, packages need to be approved. GitHub organizations or individual repos can be approved. See approval for more details. ~ hintMake sure you keep the line for PXT/TARGET (where TARGET is the target platform id)in README.md. Otherwise the package will not show up in search. ~Read more an defining-blocks to learn how to surface your APIs into blocks and JavaScript. IconThe editor will automatically use any icon.png file when displaying the package in the editor. This feature only works for approved packages. The icon should be sized with a 16:9 ratio and of at least 184 pixel wide."},{"title":"主题 | PXT","date":"2017-10-11T13:02:18.000Z","path":"2017/10/11/pxt-theme/","text":"ThemingPXT uses the Semantic UI framework to create the user interface. BlocklyTo Blockly themeing, you can overwrite the default Blockly options by configuring blocklyOptions under your target’s appTheme. See Blockly Configuration for a full list of Blockly configurable options. Semantic ThemingPXT comes with a default Semantic UI theme. You can however completely override the theme and use all the flexibility of Semantic UI to customize your target. copy the _theme folder from the project to the root of your target, and rename it to site customize the variables! You will most likely be updating the site variables under site/globals/site.variables From more information on themeing, visit http://semantic-ui.com/usage/theming.html pxt serve or pxt buildtarget will automatically rebuild semantic.css and override the built-in CSS from the app. FaviconUse realfavicongenerator to generate all the relevant favicon icon files and save them under static/icons in the docs folder. AppThemepxtarget.json contains an extensive customization section (appTheme) to control logos, names, colors, etc. Details are below (TBD): interface AppTheme { // naming id?: string; name?: string; title?: string; description?: string; boardName?: string; // associated social/store information appStoreID?: string; // Apple iTune Store ID if any twitter?: string; // localization defaultLocale?: string; locales?: Map&lt;AppTheme>; crowdinProject?: string; crowdinBranch?: string; // optional branch specification for pxt selectLanguage?: boolean; // add language picker to settings menu disableLiveTranslations?: boolean; // don't load translations from crowdin // logos logoUrl?: string; logo?: string; portraitLogo?: string; rightLogo?: string; docsLogo?: string; cardLogo?: string; appLogo?: string; // branding organization?: string; organizationUrl?: string; organizationLogo?: string; organizationWideLogo?: string; // associated URLs homeUrl?: string; shareUrl?: string; embedUrl?: string; betaUrl?: string; // beta tag and URL privacyUrl?: string; termsOfUseUrl?: string; contactUrl?: string; feedbackUrl?: string; // is set: a feedback link will show in the settings menu githubUrl?: string; legacyDomain?: string; // menu authoring and theming docMenu?: DocMenuEntry[]; // help menu TOC?: TOCMenuEntry[]; // see SUMMARY.md also galleries?: pxt.Map&lt;string>; // list of galleries to display in projects dialog hideMenuBar?: boolean; // Hides the main menu bar hideEditorToolbar?: boolean; // Hides the bottom editor toolbar // getting started and documentation sideDoc?: string; // if set: show the getting started button, clicking on getting started button links to that page hideSideDocs?: boolean; hideDocsSimulator?: boolean; // do not show simulator button in docs hideDocsEdit?: boolean; // do not show edit button in docs usbDocs?: string; htmlDocIncludes?: Map&lt;string>; htmlTemplates?: Map&lt;string>; // editor theming accentColor?: string; blocksOnly?: boolean; // blocks only workspace invertedMenu?: boolean; // if true: apply the inverted class to the menu // blockly theming blockColors?: Map&lt;string>; // block namespace colors, used for build in categories coloredToolbox?: boolean; // if true: color the blockly toolbox categories invertedToolbox?: boolean; // if true: use the blockly inverted toolbox blocklyOptions?: Blockly.Options; // Blockly options, see Configuration: https://developers.google.com/blockly/guides/get-started/web blockHats?: boolean; // if true, event blocks have hats // monaco theming invertedMonaco?: boolean; // if true: use the vs-dark monaco theme monacoToolbox?: boolean; // if true: show the monaco toolbox when in the monaco editor hasReferenceDocs?: boolean; // if true: the monaco editor will add an option in the context menu to load the reference docs // simulator theming simAnimationEnter?: string; // Simulator enter animation simAnimationExit?: string; // Simulator exit animation hasAudio?: boolean; // target uses the Audio manager. if true: a mute button is added to the simulator toolbar. highContrast?: boolean; // simulator has a high contrast mode // running in an iframe allowParentController?: boolean; // allow parent iframe to control editor extendEditor?: boolean; // whether a target specific editor.js is loaded // options around downloading a compiled file useUploadMessage?: boolean; // change \"Download\" text to \"Upload\" downloadIcon?: string; // which icon io use for download driveDisplayName?: string; // name of the drive as it shows in the explorer // miscellaneous hideEmbedEdit?: boolean; // hide the edit button in the embedded view hideCookieNotice?: boolean; // always hide cookie notice for targets that embed the editor in apps/chrome mobileSafariDownloadProtocol?: string; // custom protocol to be used on iOS sounds?: { tutorialStep?: string; tutorialNext?: string; dialogClick?: string; }, }"},{"title":"舵机串口 | PXT","date":"2017-10-11T12:58:04.000Z","path":"2017/10/11/pxt-serial/","text":"pxt-hidserial Manual Page@description Monitors serial output from certain boardsMonitors serial output from certain boards (in particular SAMD21 ones) pxt hidserial DescriptionWhen using Codal runtime, PXT sends data from serial.writeLine() and friendsover a custom USB HID protocol called HF2.The protocol supports a number of other features, including flashing and some debugging.HF2 works on all major operating systems (including Windows 7) without the needfor any drivers. pxt hidserial just dumps serial data to standard output. When using pxt serve and developingat http://localhost:3232, the HID serial is forwarded to the browser, so there is noneed to use pxt hidserial. Other useful HID command include pxt hidlist to list connected HID devicesand pxt hiddmesg to dump Codal debug buffer. PXT can also deploy over HID - thisis the default when using command line or pxt serve. See Alsopxt tool"},{"title":"静态HTML | PXT","date":"2017-10-11T12:53:27.000Z","path":"2017/10/11/pxt-static-pkg/","text":"pxt-staticpkg Manual Page@description Compiles PXT editor into static HTML filesPackages the target into static HTML pages pxt staticpkg [--route route] [--githubpages] [--output output] DescriptionCompiles the PXT editor into static HTML files that can be served without a server or integrated into an app. The resulting files are placed in built/packaged. Flags:route (optional)Routing path. If missing, defaults to local. The route will be injected into the all the paths in the application. githubpages (optional)Generate a web site compatiable with GitHub pages. output (optional)Directory for generated files. bump (option)Bump version number generating pages ~ hintThis directory is cleaned before starting the process. ~Deploying PXT with static filesRunning pxt staticpkg will create a number of files under built/packaged.You can use pxt serve -pkg or any other any web server. For example, you can use http-server for easy testing. npm install -g http-server http-server -c-1 built/packaged You can also run pxt staticpkg --route foo, which will create files under built/packaged/foothat assume they sit under /foo/ on the web server. If you do not specify anything,the files assume they sit right under /. To test it, run pxt serve -pkg and head tohttp://localhost:3232/foo/index.html. GitHub Pages supportGitHub provides you with free hosting for your project files. If you wish to publish your web site to GitHub pages, simply add --githubpages to the command. This will: create a fresh checkout in built/gh-pages if needed implicityly run pxt staticpkg --route repo-name copy files from built/packaged/repo-name to built/gh-pages add files to git, commit, and push You can then head to https://your-username.github.io/repo-name/."},{"title":"SHIM | PXT","date":"2017-10-11T12:51:29.000Z","path":"2017/10/11/pxt-shim/","text":"Auto-generation of library filesThe APIs visible to PXT user (as TypeScript functions/classes or blocks)expose behaviors defined in the C++ library files (in case of hardware targets)and also the JavaScript simulator (runtime environment).These are defined in TypeScript files (usually .d.ts) under /libs folderin the target definition. Let’s call these shim files. The definitions in shim files include JSDoc comments andannotations starting with //%. In particular, //% shim=foo::bar meansthat the current function should be mapped to the C++ function foo::barand also to the simulator function pxsim.foo.bar. PXT can generate shim files from either C++in case of hardware targets, or from the simulator sources.In both cases, PXT will copy over all JSDoc style comments and //% annotations,add shim=... annotation, and also map the type appropriately (for example, C++ int typeis mapped to number, and TypeScript RefAction to ()=&gt;void).We refer to the information copied as API meta-data. Auto-generation from C++In case of hardware targets, the API meta-data should be defined in C++, and not the simulator.This is mostly because debugging mismatches on the C++ side is much harder than on the JSside. The shims are generated per-package under /libs when building the target.The shims files are called shims.d.ts and enums.d.ts. Enums are generatedseparately, so that they can be &lt;referenced ...&gt; from simulator sources. Both files should be listed in &quot;files&quot; section of pxt.json, and we also recommendthey are checked into git. PXT implements a simple parser for a fragment of C++. This parser will not handleeverything you throw at it. In particular, it is line based and doesn’t takemulti-line comments (other than doc comments) very well. To comment out a piece of C++code use #if 0 .... #endif. The type mapping from C++ to TypeScript is quite limited.Checkout the microbit target for an example. Auto-generation from the simulatorThis should be used in case of software-only targets. The shim file is called sims.d.ts and is generated from /sim/*.ts while buildingthe target. The file will be generated in the &quot;corepkg&quot; of the target. In future, we mayallow splitting between packages. Similarly, to the C++ generation, sims.d.ts shouldbe included in pxt.json and checked in. Checkout the sample target for an example. functionAsync handlingA function (or method) named fooAsync will be exposed as foo. It is expectedto return a promise. This will generate //% promise annotation, which will letthe compiler know about this calling convention. Legacy async handlingThe simulator function can also get hold of a callback function using getResume()and then call the resulting function when the function is supposed to resume.You need to include the //% async annotation in that case. Simulator implementationsIf you’re adding your own C++ or assembly functions in packagesand you either cannot or don’t want to add a corresponding function to the simulator,you can provide a simulator-only implementation. For example: /** * Writes to the Bluetooth UART service buffer. */ //% blockId=bluetooth_uart_write block=\"bluetooth uart write %data\" blockGap=8 //% shim=bluetooth::uartWrite export function uartWrite(data: string): void { // dummy implementation for simulator console.log(\"UART Write: \" + data) } Notice the shim= annotation. In C++ you would have just this: namespace bluetooth { //% void uartWrite(StringData *data) { // ... } } When PXT sees a call to function annotated with shim=, it will always use theshim in the native compilation. In simulator compilation it will use the shim onlyif the function has no body or empty body. If you don’t want your simulator implementationto do anything, you can for example put a single return statement as the body. Indexed InstancesA typical pattern to expose pins on a device is something like follows: class DeviceIO { public: DevicePin pins[0]; //% indexedInstanceNS=pins indexedInstanceShim=pins::getPin //% DevicePin A0; //% DevicePin A1; ... }; namespace pins { DeviceIO io; //% DevicePin *getPin(int id) { // ... add range checking ... return &amp;io.pins[id]; } } namespace DevicePinMethods { //% blockId=device_get_digital_pin block=\"digital read|pin %name\" blockGap=8 //% blockNamespace=pins int digitalRead(DevicePin *name) { return name->getDigitalValue() } ... } This will result in the following declarations being generated: declare namespace pins { //% fixedInstance shim=pins::getPin(0) const A0: DevicePin; //% fixedInstance shim=pins::getPin(1) const A1: DevicePin; ... } declare interface DevicePin { //% blockId=device_get_digital_pin block=\"digital read|pin %name\" blockGap=8 //% blockNamespace=pins shim=DevicePinMethods::digitalRead digitalRead(): number; ... } The indexedInstanceShim generates the shim=...(no) annotations.They instruct the access to the variable (which is read-only) to becompiled as call the the specified function with the specific literalargument. The fixedInstance annotation is automatically generatedfor blocks. The namespace FooMethods is turned into an interface Foo. Theseare usually used to wrap native C++ classes that require no referencecounting. Thus, you also need to manually add the following TypeScript: interface DevicePin { // no methods needed, they come from C++ } If you don’t, the runtime will call method that do not exists andchaos will prevail (even though you might not see it at the beginning). You can also specify inheritance in such a declaration: interface AnalogPin extends DigitalPin {}"},{"title":"定义blocks | PXT","date":"2017-10-11T11:32:49.000Z","path":"2017/10/11/pxt-define-blocks/","text":"Defining blocksThis section describes how to annotate your PXT APIs to expose them in the Block Editor. All the //% annotations are found in TypeScript library files.They can optionally be auto-generated from C++ library files or from TypeScriptsimulator files. CategoryEach top-level javascript namespace is used to populate a category in the Block Editor toolbox. The name will automatically be capitalized in the toolbox. namespace basic { ... } You can also provide a JsDoc comment, color and weight for the namespace, as well as a friendly name (in Unicode).We strongly recommend carefully picking colors as it dramatically impactsthat appearance and readability of your blocks. All blocks within the same namespace have the same color so that users can find the category easily fromsamples. /** * Provides access to basic micro:bit functionality. */ //% color=190 weight=100 icon=\"\\uf1ec\" block=\"Basic Blocks\" namespace basic { icon icon Unicode character from the icon font to display. The Semantic UI icon set has been ported from Font Awesome (v4.5.6 at the time of writing), and a full list can be found at http://fontawesome.io/icons/ color should be included in a comment line starting with \\\\%. The color takes a hue value or a HTML color. To have a category appear under the “Advanced” section of the Block Editor toolbox, add the annotation advanced=true. BlocksAll exported functions with a block attribute will be available in the Block Editor. //% block export function showNumber(v: number, interval: number = 150): void { } If you need more control over the appearance of the block,you can specify the blockId and block parameters. //% blockId=device_show_number //% block=\"show|number %v\" export function showNumber(v: number, interval: number = 150): void { } blockId is a constant, unique id for the block. This id is serialized in block code so changing it will break your users. block contains the syntax to build the block structure (more below). Other optional attributes can also be used: blockExternalInputs= forces External Inputs rendering advanced=true causes this block to be placed under the parent category’s “More…” subcategory. Useful for hiding advanced or rarely-used blocks by default Block syntaxThe block attribute specifies how the parameters of the functionwill be organized to create the block. block = field, { &#39;|&#39; field } field := string | string `%` parameter [ `=` type ] parameter = string type = string each field is mapped to a field in the block editor the function parameter are mapped in order to %parameter argument. The loader automatically buildsa mapping between the block field names and the function names. the block will automatically switch to external inputs when enough parameters are detected A block type =type can be specified optionally for each parameter. It will be used to populate the shadow type. Supported typesThe following types are supported in function signatures that are meant to be exported: number (TypeScript) or int (C++) string (TypeScript) or StringData* (C++) enums (see below) custom classes that are also exported arrays of the above Callbacks with ParametersAPIs that take in a callback function will have that callback converted into a statement input.If the callback in the API is designed to take in parameters, the best way to map that patternto the blocks is by passing the callback a single parameter with a class type that containsall the other values. For example: export class ArgumentClass { argumentA: number; argumentB: string; } //% mutate=objectdestructuring //% mutateText=\"My Arguments\" //% mutateDefaults=\"argumentA;argumentA,argumentB\" // ... export function addSomeEventHandler((a: ArgumentClass) => void) { }; In the above example, setting mutate=objectdestructuring will cause this API to use Blockly “mutators”to let users change what parameters appear in the blocks. Each parameter will be given anoptional variable field in the block that defines a variable that can be used within the callback.The variable fields compile to object destructuring in the TypeScript code. For example: addSomeEventHandler(({argumentA, argumentB}) => { }) For an example of this pattern in action, see the radio.onDataPacketReceived block inthe microbit target. In some cases it can be useful to change the runtime behavior of the API based on the properties selected by theuser. To enable that behavior, create an enum with entries that have the same names as the argument object’sproperties and add an extra parameter taking in an enum array to the API. For example: export class ArgumentClass { argumentA: number; argumentB: string; } enum ArgNames { argumentA, argumentB } //% mutate=objectdestructuring //% mutateText=\"My Arguments\" //% mutateDefaults=\"argumentA;argumentA,argumentB\" //% mutatePropertyEnum=\"argNames\" // ... export function addSomeEventHandler(args: ArgNames[], (a: ArgumentClass) => void) { }; Note the mutatePropertyEnum attribute added to the comment annotations. The block for this API willlook the same as the previous example but the compiled code will also include the arguments passed: addSomeEventHandler([ArgNames.argumentA, ArgNames.argumentB], ({argumentA, argumentB}) => { }) The other attributes related to object destructuring mutators include: mutateText - defines the text that appears in the top block of the Blockly mutator dialog (the dialog that appears when you click the blue gear) mutateDefaults - defines the versions of this block that should appear in the toolbox. Block definitions are separated by semicolons and property names should be separated by commas EnumsEnum are supported and will automatically be represented by a dropdown in blocks. enum Button { A = 1, B = 2, //% blockId=\"ApB\" block=\"A+B\" AB = 3, } the initializer can be used to map the value the blockId attribute can be used to override the block id the block attribute can be used to override the rendered string Tip: dropdown for non-enum parametersIt’s possible to provide a drop-down for a parameter that is not an enum. It involves the following step: create an enum with desired drop down entryenum Delimiters { //% block=\"new line\" NewLine = 1, //% block=\",\" Comma = 2 } a function that takes the enum as parameter and returns the according value//% blockId=\"delimiter_conv\" block=\"%del\" export function delimiters(del : Delimiters) : string { switch(del) { case Delimiters.NewLine: return \"\\n\"; case Delimiters.Comma: return \",\"; ... } } use the enum conversion function block id (delimiter_conv) as the value in the block parameter of your function//% blockId=\"read_until\" block=\"read until %del=delimiter_conv\" export function readUntil(del: string) : string { ... } Docs and default valuesThe JSDoc comment is automatically used as the help for the block. /** * Scroll a number on the screen. If the number fits on the screen (i.e. is a single digit), do not scroll. * @param interval speed of scroll; eg: 150, 100, 200, -100 */ //% help=functions/show-number export function showNumber(value: number, interval: number = 150): void { } If @param annotation is available with an eg: section, the firstvalue is used as the shadow value. An optional help attribute can be used to point to an specific documentation path. If the parameter has a default value (interval in this case), it is not exposed in blocks. If you want to include minimum and maximum value range for a numeric parameter, you can use square brackets with the range [min-max] after the parameter name in the @param annotation. It is important to include the shadow value if you are using range @param power [0-7] a value in the range 0..7, where 0 is the lowest power and 7 is the highest. eg: 7 Objects and Instance methodsIt is possible to expose instance methods and object factories, either directlyor with a bit of flattening (which is recommended, as flat, C-style APIs map best to blocks). Direct//% class Message { ... //% blockId=\"message_get_text\" block=\"%this|text\" public getText() { ... } } when annotating an instance method, you need to specify the %this parameter in the block syntax definition. You will need to expose a factory method to create your objects as needed. For the example above, we add a function that creates the message: //% blockId=\"create_message\" block=\"create message|with %text\" export function createMessage(text: string) : Message { return new Message(text); } Auto-createIf object has a reasonable default constructor, and it is harmless to call thisconstructor even if the variable needs to be overwritten later, then it’s usefulto designate a parameter-less function as auto-create, like this: namespace images { export function emptyImage(width = 5, height = 5): Image { ... } } //% autoCreate=images.emptyImage class Image { ... } Now, when user adds a block referring to a method of Image, a globalvariable will be automatically introduced and initialized with images.emptyImage(). In cases when the default constructor has side effects (eg., configuring a pin),or if the default value is most often overridden,the autoCreate syntax should not be used. Fixed Instance SetIt is sometimes the case that there is only a fixed number of instancesof a given class. One example is object representing pins on an electronic board.It is possible to expose these instances in a manner similar to an enum: //% fixedInstances class DigitalPin { ... //% blockId=device_set_digital_pin block=\"digital write|pin %name|to %value\" //% blockNamespace=pins digitalWrite(value: number): void { ... } } namespace pins { //% fixedInstance let D0: DigitalPin; //% fixedInstance let D1: DigitalPin; } This will result in a block digital write pin [D0] to [0], where thefirst hold is a dropdown with D0 and D1, and the second hole is a regularinteger value. The variables D0 and D1 can have additional annotations(eg., block=&quot;D#0&quot;). Currently, only variables are supported with fixedInstance(let or const). Fixed instances also support inheritance. For example, consider adding the followingdeclarations. //% fixedInstances class AnalogPin extends DigitalPin { ... //% blockId=device_set_analog_pin block=\"analog write|pin %name|to %value\" //% blockNamespace=pins analogWrite(value: number): void { ... } } namespace pins { //% fixedInstance let A0: AnalogPin; } The analog write will have a single-option dropdown with A0, butthe optionals on digital write will be now D0, D1 and A0. Variables with fixedInstance annotations can be added anywhere, at the top-level,even in different libraries or namespaces. This feature is often used with indexedInstance* attributes. It is also possible to define the instances to be used in blocks in TypeScript,for example: namespace pins { //% fixedInstance whenUsed export const A7 = new AnalogPin(7); } The whenUsed annotation causes the variable to be only included in compilationwhen it is used, even though it is initialized with something that can possiblyhave side effects. This happens automatically when there is no initializer,or the initializer is a simple constant, but for function calls and constructorsyou have to include whenUsed. OrderingAll blocks have a default weight of 50 that is used to sort them in the UI with the highest weight showing up first. To tweak the ordering,simply annotate the function with the weight macro: //% weight=10 ... If given API is only for Blocks usage, and doesn’t make much sense in TypeScript(for example, because there are alternative TypeScript APIs), you can use //% hiddenflag to disable showing it in auto-completion. GroupingUse the blockGap macro to specify the distance to the next block in the toolbox. Combined with the weight parameter,this macro allows to definte groups of blocks. The default blockGap value is 8. //% blockGap=14 ... Testing your BlocksWe recommend to build your block APIs iteratively and try it out in the editor to get the “feel of it”.To do so, the ideal setup is: run your target locally using pxt serve keep a code editor with the TypeScript opened where you can edit the APIs refresh the browser and try out the changes on a dummy program. Interestingly, you can design your entire API without implementing it! Deprecating BlocksTo deprecate an existing API, you can add the deprecated attribute like so: //% deprecated=true This will cause the API to still be usable in TypeScript, but prevent the block from appearing in theBlockly toolbox. If a user tries to load a project that uses the old API, the project will still loadcorrectly as long as the TypeScript API is present. Any deprecated blocks in the project will appear inthe editor but not the toolbox. API design Tips and TricksA few tips gathered while designing various APIs for the Block Editor. Design for beginners: the block interface is for beginners. You’ll want to create a specific layer of C-like function for that purpose. Anything that snaps together will be tried by the user: your runtime should deal with invalid input with graceful degradation rather than abrupt crashes.Some users will try to snap anything together - get ready for it. OO is cumbersome in blocks: we recommend using a C-like APIs – just function – rather than OO classes. It maps better to blocks. Keep the number of blocks small: there’s only so much space in the toolbox. Be specific about each API you want to see in Blocks."},{"title":"配置pxtarget.json | PXT","date":"2017-10-11T11:31:04.000Z","path":"2017/10/11/pxt-pxtarget-json/","text":"pxtarget.json Manual PageA PXT target is described by a pxtarget.json JSON file.Here are two examples of pxtarget.json files, one simple and one more complex: https://github.com/Microsoft/pxt-sample/blob/master/pxtarget.json https://github.com/Microsoft/pxt-microbit/blob/master/pxtarget.json The JSON file pxtarget.json is described at the top-level by the interfaces TargetBundleand AppTarget, shown below.Fields labelled as “DERIVED” in the comments are populated by PXT from other sources,as indicated. All other fields below are user-supplied. Optional fields have a “?” after their name. All PXT targets also must supply an NPM package.jsonfile, which describes the versioning, dependency and resources required to build the target.You can find examples for pxt-sample and pxt-microbit here: https://github.com/Microsoft/pxt-sample/blob/master/package.json https://github.com/Microsoft/pxt-microbit/blob/master/package.json Here’s more about creating a target TargetBundleThe interface TargetBundle describes the PXT packages that come bundledwith the target (as opposed to being pulled from the web), as well as the semanticversion of the target: interface TargetBundle extends AppTarget { versions: TargetVersions; // DERIVED: defines the semantic versioning for the target bundleddirs: string[]; // packages to be bundled into web app (libs/*) } versions: TargetVersionsPXT uses semantic versioning of its targets and packages. The TargetVersionsinterface has two relevant fields that are populated as specified below: interface TargetVersions { target: string; // equal to version field in \"package.json\" pxt: string; // equal to version field in \"package.json\" or \"node_modules/pxt-core/package.json\" } bundleddirs: string[]A target can use many packages in addition to the required “corepkg”. Toensure that a package is bundled into the web app, you must include it in this list. Forexample in http://github.com/microsoft/pxt-microbit/blob/master, we see: \"bundleddirs\": [ \"libs/core\", \"libs/radio\", \"libs/devices\", \"libs/bluetooth\" ], This ensures that the above four packages are compiled/bundled into the web app and delivered on the initialdownload of the web app. Other packages for the micro:bit, such as http://github.com/microsoft/pxt-neopixelare not bundled and remain on github.com, where they are loaded as needed by the web app (usuallyvia an “add package” request by the end user). AppTargetMost of the user-defined fields for pxttarget.json are described by the interface AppTarget. interface AppTarget { id: string; // unique id: should match ^[a-z]+$; used in URLs and domain names name: string; // friendly name (spaces allowed) corepkg: string; // specifies the directory (under libs/) for target's core APIs // such libraries also are known as packages. See section below. compile: CompileTarget; // see sections below for description appTheme: AppTheme; // see sections below for description nickname?: string; // Friendly id (should match ^[a-zA-Z]+$); used when generating files, // folders, etc. defaults to id platformid?: string; // Used as search term in GitHub search for packages; defaults to id title?: string; // for HTML TITLE tag description?: string; // for HTML META Description cloud?: AppCloud; // see sections below for descriptions of the rest of the fields simulator?: AppSimulator; runtime?: RuntimeOptions; compileService?: TargetCompileService; } corepkg: stringA target must have a core package under the libs/ directorywhere the core APIs for the target reside.The core package should always be bundled with the web app, as shown below: \"corepkg\": \"core\", \"bundleddirs\": [ \"libs/core\" ] compile: CompileTargetPXT supports compilation to both JavaScript and ARM machine code (native). Web-only targetswill not need the native compilation path. interface CompileTarget { isNative: boolean; // false -> JavaScript compilation only, for simulator hasHex: boolean; // output binary file (implies isNative) nativeType?: string; // currently only \"thumb\", though there is a prototype for AVR // output file options useUF2?: boolean; // true -> output UF2 format (see https://github.com/Microsoft/uf2), false -> HEX file hexMimeType?: string; // Mime type for hex files driveName?: string; // how will the device appear when plugged in via MSD? deployDrives?: string; // partial name of drives where the HEX/UF2 file should be copied // code generation options floatingPoint?: boolean; // use floating point in JavaScript (default is 32-bit integers) taggedInts?: boolean; // true -> use tagged integers in native (implies floatingPoint) shortPointers?: boolean; // true -> 16 bit pointers flashCodeAlign?: number; // defaults to 1k page size flashChecksumAddr?: number; // where to store checksum of code // advanced debugging options boxDebug?: boolean; // generate debugging code for boxing jsRefCounting?: boolean;// generate debugging in JS for reference counting scheme openocdScript?: string; } appTheme: AppThemePXT has a large number of options for controllingthe look and feel of a target.Here is the appTheme from pxt-sample with some comments: \"appTheme\": { // URLs to use for various components of the UI \"logoUrl\": \"https://microsoft.github.io/pxt-sample/\", \"homeUrl\": \"https://microsoft.github.io/pxt-sample/\", \"privacyUrl\": \"https://go.microsoft.com/fwlink/?LinkId=521839\", \"termsOfUseUrl\": \"https://go.microsoft.com/fwlink/?LinkID=206977\", \"betaUrl\": \"https://makecode.com/\", // populating the (?) menu \"docMenu\": [ { \"name\": \"About\", \"path\": \"/about\" }, { \"name\": \"Docs\", \"path\": \"/docs\" } ], // enable toolbox for both Blockly and JavaScript \"coloredToolbox\": true, \"monacoToolbox\": true, \"invertedMenu\": true, \"simAnimationEnter\": \"rotate in\", \"simAnimationExit\": \"rotate out\" } cloud?: AppCloudPXT has a cloud backend that provides a set of services to the web app. The services are configured usingthe cloud field in pxttarget.json, defined by the AppCloud interface: interface AppCloud { sharing?: boolean; // enable anonymous sharing of projects via URL importing?: boolean; // enable import of a previously shared project from // a URL (requires sharing? and publishing?) packages?: boolean; // enabled loading of packages (from github) preferredPackages?: string[]; // list of company/project(#tag) of packages on github githubPackages?: boolean; // enable user-specified term for searching github for packages // to be retired soon publishing?: boolean; // must set true for importing? to work; no other purpose evident embedding?: boolean; // not currently supported workspaces?: boolean; } For example in the pxttarget.json for http://github.com/microsoft/pxt-microbit, we see: \"cloud\": { \"workspace\": false, \"packages\": true, \"sharing\": true, \"publishing\": true, \"preferredPackages\": [ \"Microsoft/pxt-neopixel\" ], \"githubPackages\": true } simulator?: AppSimulator;PXT provides a JavaScript-based simulation environment on the left side of the webapp (typically for physical computing devices like the micro:bit). PXT uses theterm board to refer to the main physical computing device shown in the simulator.Each target has one board (plus optional parts). interface AppSimulator { // define aspects of physical computing device boardDefinition?: BoardDefinition; // running and code changes autoRun?: boolean; // automatically run program after a change to its code stopOnChange?: boolean; // stop execution when user changes code headless?: boolean; // whether simulator should still run while collapsed // buttons and parts hideRestart?: boolean; // hide the restart button hideFullscreen?: boolean; // hide the fullscreen button enableTrace?: boolean; // enable the slow-mode (snail) button parts?: boolean; // parts enabled? instructions?: boolean; // generate step-by-step wiring instructions (Make button) // appearance aspectRatio?: number; // width / height partsAspectRatio?: number; // aspect ratio of the simulator when parts are displayed // miscellaneous trustedUrls?: string[]; // URLs that are allowed in simulator modal messages } runtime?: RuntimeOptions;This severely misnamed option controls the available blocks in the Blockly editor: interface RuntimeOptions { // control whether or not Blockly built-in categories appear mathBlocks?: boolean; textBlocks?: boolean; listsBlocks?: boolean; variablesBlocks?: boolean; logicBlocks?: boolean; loopsBlocks?: boolean; // options specific to the special \"on start\" block onStartNamespace?: string; // default = loops onStartColor?: string; onStartWeight?: number; onStartUnDeletable?: boolean; } compileService?: TargetCompileService;PXT provides a compile service for C/C++ code that may be included in a target/package.Currently, this compile service can be configuredto use either yottaor platformio.PXT defaults to using local installs of yotta and platformio.PXT expects to find the C/C++ sources on github. interface TargetCompileService { buildEngine?: string; // default is yotta, set to platformio // where are the sources githubCorePackage?: string; // e.g. lancaster-university/microbit gittag: string; // yotta configuration yottaCorePackage?: string; // name for PXT use yottaTarget?: string; // name of yotta target to build yottaBinary?: string; // name of yotta output file yottaConfig?: any; // additional config // platformio configuration platformioIni?: string[]; // define contents of platformio.ini file serviceId: string; }"},{"title":"编译 | PXT","date":"2017-10-11T10:39:58.000Z","path":"2017/10/11/pxt-target/","text":"Target CreationPXT can be customized to create your own target, with your own set of APIs and runtime,supported by Block-based and JavaScript editing. Examples of targets are: https://makecode.microbit.org (sources at https://github.com/microsoft/pxt-microbit) http://microsoft.github.io/pxt-sample/ (sources at https://github.com/microsoft/pxt-sample) We assume that the reader is familiar with Node.JS, NPM, JavaScript and/or C++. If you haven’t done so yet,install Node.JS and the PXT command line npm install -g pxt Get a copy of the sample target sources and open it in your favorite editor. Open a command prompt in the target folder and run these commands to setup the tools. npm install At this point, pick an identifier for your target. Use only alphabetic characters as it will be used in various routing operations. StructureA target occupies a directory with a pxtarget.json file and the following folders: /libs, packages (sometimes referred to as libraries) that define the APIs (in C++, Static TypeScript or Thumb assembler) and how they should be exposed in blocks /sim, TypeScript source for the in-browser simulator, if any /docs, markdown documentation pages Updating pxtarget.json如：{ id: “ID:utseb”, name: “名称：utseb”, title: “标题：utseb”}The pxtarget.json file contains the configuration options of your target.For now, update the id, name and title fields to reflect your target information. Tip: keep searching and replacing all instances of sample in pxtarget.json. Updating package.jsonYour target will eventually have to be published to NPM,so go ahead and update the package.json file with your target id,repositories locations, etc. it might be a good time to check that your target id is available in NPM as well. Updating assetsGraphical assets are located under /docs/static. avatar.svg image used in talking heads loader.svg image used in loading overlay Updating the core packageThe libs/core package of pxt-sample defines a minimal package structure. In fact, the APIs of pxt-sample live in the sim/api.ts (annotated to exposeTypeScript functions as blocks), as this target is onlyfor the web. The PXT compiler generatesthe file libs/core/sim.d.ts from the simulator code. See creating a PXT packagefor more information on authoring packages, which includes codein the package itself.For now, you can try adding a new API to one of the existing namespacesinsim/api.ts with annotations to make a new block. Updating the templates projectsTemplates are the default projects for your target.There is one default blocks project, and one default JavaScript project.The initial templates are empty projects.To change the default project, modify the package under libs/blocksprj Testing the target locallyNow that you’ve updated your target, it is ready to be run locally. Run the following command: pxt serve The editor will automatically open the target API project which you can edit directly in PXT.At this point, we recommend to create a new project using blocks that will serve as a sandbox.New projects are created under the /projects folder when testing a target locally (and are automatically “git-ignored”). You can use these projects to change your templates. Simply copy the contents of your project under /projects to one of the templates under /libs/templates/. Whenever you make a change, the local web server will trigger a build. Simply reload the page once the build is done. Defining APIs and BlocksThe APIs available in the PXT environment are loaded from TypeScript package (library) files(the ones under /libs).They can optionally be auto-generated from C++ library files or from TypeScriptsimulator files. Read more about how to annotate your APIS to expose them as blocks in PXT. Path rewritingWhen uploading to PXT cloud URLs of various files are rewritten to ones pointing to the CDN.There are three kinds of URLs on the CDN: /blob/&lt;blob_hash&gt;/some/path/filename.ext - where the path and file name can be arbitrary /commit/&lt;commit_hash&gt;/path/in/that/commit/filename.ext - where the path actually comes from the commit /tree/&lt;tree_hash&gt;/path/in/that/tree/filename.ext - where the path actually comes from the tree Whenever possible, /blob/ URLs should be used, since they only change when the file changes.This allows for faster app updates. For an example, compare https://makecode.microbit.org/---manifestand https://github.com/Microsoft/pxt/blob/master/webapp/public/release.manifest Generally, PXT will rewrite URLs starting with /cdn/ to /commit/... and ones startingwith /blb/ to /blob/.... This happens in manifest and HTML files, as well as some JavaScriptfiles (web worker sources and embed.js). Part of that rewriting happens client-side when uploading(strings like @commitCdnUrl@ and @blobCdnUrl@ are introduced), and part happens in the cloud. Currently, in simulator files only, all of /cdn/, /sim/ and /blb/ are rewrittento /blob/.... Going forward however, simulator files should use /blb/ explicitlyto make the intent clear. The main reason to use /cdn/ instead of /blb/ is when resources require relative paths.This is for example the case for Blockly media files. The /tree/... URLs are not yet supported in rewriting."},{"title":"异步 | PXT","date":"2017-10-11T10:04:51.000Z","path":"2017/10/11/pxt-async/","text":"异步与线程背景知识JavaScript is generally speaking single threaded (there are web workers and other such inventions, but these are generally considered separate processes, that share no address space with the main process). If a function needs to wait forsome input (e.g., web request), you need to supply a callback function that getsexecuted when the data is available. downloadData(\"https://example.com/\", (err, data) => { if (err) { ... } else { let parsed = JSON.parse(data) ... } }) This becomes somewhat problematic when you start to nest these.A simple web search on “callback hell” will tell why. One way to fix this is to use promises, but the idearemains the same — in the .then() handler you provide the function to executewhen data is available, but the advantage is that you can often avoid nestingthem (functions returning promises are often by convention called somethingAsync): downloadDataAsync(\"https://example.com/\") .then(data => { let parsed = JSON.parse(data) ... }, err => { ... }) .then(() => downloadDataAsync(\"https://somewhere-else.com/\")) .then(somewhere => ...) There are proposals of introducing C#-style async/await to JavaScript.In fact TypeScript can compile async/await to ES6 generators (yield).In that case you can use await operator to make a call to a promise-returningfunction look sequential: let parsed = JSON.parse(await downloadDataAsync(\"https://example.com/\")) ... let somewhere = await downloadDataAsync(\"https://somewhere-else.com/\") ... Needless to say, this is way more readable and easier to get right thanthe previous two solutions. In fact, it lets you simulatecooperative multithreading — you think you have multiple threads,but only one of them runs at any given time, and you can be sureyour thread will not get interrupted until the point where it uses await. Promise? Await? And what is that for loop thing again?Now, all of this is great, but not really something you want to explainto someone who’s just trying to learn what a for loop is. For this reason, PXT lets users call async functions, as if they wereregular functions. This loses information about where your thread canbe interrupted, but we can hopefully recover that in the IDE (by for exampledisplaying a little clock next to async calls). let parsed = JSON.parse(downloadData(\"https://example.com/\")) ... let somewhere = downloadData(\"https://somewhere-else.com/\") ... Supporting async functions this way is one of the main reasons why we haveour own compilation scheme from TypeScript to JavaScript (cross-browserdebugger is another major one). Implementing async functionsCurrently, to implement an async function, you first need to add //% promiseattribute to the declaration: //? Downloads data from remote site. //% promise shim=basic::downloadData export function downloadData(url:string) { return \"\" } In the simulator you return a promise: export function downloadDataAsync(url:string) { return new Promise((resolve, reject) => $.get(url, (data, status) => { resolve(data) })) } It is also possible to use //% async and use getResume() functionto get a callback. You can see some older code do that. Note, that you can generate TypeScript definition from thesimulator files, which will take care of the //% promise and //% shim=... annotations."},{"title":"JavaScript编辑器特性 | PXT","date":"2017-10-11T09:28:35.000Z","path":"2017/10/11/pxt-editor/","text":"Features of the JavaScript EditorThe JavaScript editor extends the features and functionality of the Monaco Editor, the editor that powers Visual Studio Code.Here is a list of some of the features supported by the Editor: EditingThe Editor contains a built-in JavaScript/Typescript language service that provides complete code intelligence. ColoringThe Editor automatically colors each of function and its respective namespace to match the colors of the respective block in the Block Editor. This is the equivalent of the following blocks: Auto SuggestAlso known as IntelliSense, the editor supports automatic word completion. If the language service knows possible completions, the IntelliSense suggestions will pop up as you type. You can always manually trigger it with Ctrl and Space. You can get additional information if you click the ‘i’ symbol in the current suggestion. Auto completionPressing Enter to any of the functions suggested by IntelliSense will automatically insert a snippet of the function declaration prefilling default values for each of the function parameters. The default value is populated in one of the following ways: The default value in a @param JSdoc in the function declaration. Default values for primitive types. number: 0, string: &quot;&quot;, boolean: false If a parameter is an Enum, the first value of the Enum is inserted Parameter HintsParameter hints will pop up as you’re typing a function invocation. Quick InfoHovering over namespaces, functions and function parameters will show useful information describing the purposes of the function, namespace, or parameter. Bracket MatchingMatching brackets are highlighted as soon as the cursor is near one of them. Tip: You can jump to the matching bracket with Ctrl and Shift and \\ ErrorsThe Editor’s language service is constantly analyzing your code for errors in the background.Errors are surfaced to the user in one of two different ways: Red squiggly or wavy lines appear beneath your code that is incorrect An Error bar snaps to the first error in the list ZoomYou can change the editor’s font size by zooming in or out the editor content.Use Ctrl and + and Ctrl and - to zoom in/out. Find and ReplaceThe Editor supports Find, as well as Find and Replace in order to search for a particular keyword, or search and replace a particular keyword.You can get to the Find and Replace widget with Ctrl and f, or you can also get to it via the All Commands window (see below). Context MenuRight clicking anywhere within the editor will bring up the context menu.The context menu will show you quick actions that you can complete by clicking one of the buttons that appear in the context menu. Here are some of the actions currently supported: Format Code: Quickly formats the document code Show Commands: Opens up the All Commands view Save: Saves the document Run Simulator: Runs the simulator All CommandsThe All Commands view allows the user to search through all the commands available in the editor.To get to the all commands view press F1, or right click to bring up the context menu, then click Show Commands. Language SupportThe Monaco editor is also used for displaying other languages, including JSON, Cpp, Text and Assembly files."},{"title":"关于 | PXT","date":"2017-10-11T09:00:14.000Z","path":"2017/10/11/pxt-makecode-about/","text":"目标：Microsoft Makecode是一个开源框架， 旨在为计算机科学教育提供帮助。makecode 侧重于user-facing编辑器的开发，底层开发语言是TypScript的子集。 特性：Google Blockly 块状，拖拽编程。Monaco Editor web版本的编辑器an ARM Thumb machine code emitter"},{"title":"博客添加统计功能","date":"2017-10-11T08:57:32.000Z","path":"2017/10/11/blog-count-feature/","text":""},{"title":"比卦 | 易经","date":"2017-10-10T12:37:38.000Z","path":"2017/10/10/yi-8-bi/","text":"比:吉。原筮(shi),元永贞,无咎。不宁方来,后夫凶。【译】《比卦》象征亲密无间,团结互助:吉祥。探本求原,再一次卜筮占问,知道 要辅佐有德行的长者,长久不变地坚守正道,不会有祸害。连不安分的诸侯现在也来朝 贺,还有少数来得迟的诸侯将有凶险。《象》曰:地上有水,比;先王以建万国,亲诸侯。【译】《象辞》说:《比卦》的卦象为坤,(地)下坎(水)上,象征地上有水。大地 上百川争流,流水又浸润着大地,表明地与水亲密无间,互相依存;以前的历代君主明 白这个道理,所以分封土地,建立万国,安抚亲近各地诸侯。 初六,有孚比之,无咎;有孚盈缶(fou),终来有它,吉。【译】初六,具有诚实守信的德行,亲密团结,辅佐君主,不会有灾祸;诚信的德行 如同美酒注满了酒缸,这样远方的人纷纷前来归附,结果是吉祥的。 《象》曰:《比》之初六,有它吉也。【译】《象辞》说:《比卦》的第一爻位(初六),表示一开始便具有诚信的德行,致 20 使远方来人归附,自然可获吉祥。 六二,比之自内,贞吉。【译】六二,在内部亲密团结,努力辅佐君主,结果是吉祥的。 《象》曰:“比之自内”,不自失也。【译】《象辞》说:“内部亲密无间团结一致,辅佐君主”,说明没有偏离了正道。 六三,比之匪人。【译】六三,和行为不端正的人交朋友,而且关系亲密。 《象》曰“比之匪人”,不亦伤乎?【译】《象辞》说:“和行为不端正的人交朋友,而且关系亲密”,难道不是一件很可 悲的事吗? 六四,外比之,贞吉。【译】六四,在对外交往中互相信任,亲密团结,尽力辅佐贤明的君主,其结果是吉 祥的。 《象》曰:外比于贤,以从上也。【译】《象辞》说:在外面亲密团结朋友,辅佐贤君,说明要顺从居于尊上地位的君 主,才会有好的结果。 ￼￼九五,显比;王用三驱,失前禽,邑人不诫,吉。【译】九五,光明无私,亲密团结,互相辅助;跟随君王去田野围猎,从三面驱赶, 网开一面,看着禽兽从放开的一面逃走,毫不在乎,君王的部下也不戒备,吉祥。 《象》曰:“显比”之吉,位正中也,舍逆取顺,失前禽也;邑人不诫,上使中也。【译】《象辞》说:“光明无私,亲密团结,互相辅助”,可获得吉祥,因为此时居于 正中位置。抛弃逆天行事的举动而顺其自然,就好像围猎时网开一面,让该被擒的禽兽 落网,不该被获的从前面逃掉;君王的部下听其自然,不加戒备;这是君王的贤德感化 了部下的缘故。 上六,比之无首,凶。【译】上六,和众人亲密团结、互助友爱但自己不居于领导地位,将有凶险。 《象》曰:“比之无首”,无所终也。【译】《象辞》说:“和众人亲密团结、互助友爱但自己不居于领导地位,将有凶险”,说明自己将来没有可以归附的地方,无立足之地。"},{"title":"师卦 | 易经","date":"2017-10-10T12:31:20.000Z","path":"2017/10/10/yi-7-shi/","text":"师:贞,丈人吉,无咎。【译】《师卦》象征兵众(师指军队):坚守正道,德高望重富有经验的长者统帅军队 可以得到吉祥,不会有什么灾祸。 ￼￼《象》曰:地中有水,师;君子以容民畜众。【译】《象辞》说:《师卦》的卦象是坎(水)下坤(地)上,是地中有水之表象。地 中蕴藏聚集了大量的水,取之不尽,用之不竭,象征兵源充足;君子要像地中藏水一样 容纳天下百姓,养育众人,这样就会有众多的士兵可用。 初六,师出以律,否(pi)臧(zang)凶。【译】初六,出师征战必须要有严明的纪律,如果军纪混乱必然有凶险。 《象》曰:“师出以律”,失律凶也。【译】《象辞》说:“出师征战必须要有严明的纪律”,要号令整齐,行动一致,赏罚 分明。如果军纪不良,指挥不灵,必然要发生凶险。 九二,在师,中吉,无咎;王三锡命。【译】九二,在军中任统帅,持中不偏可得吉祥,不会有什么灾祸;君王多次进行奖 励,并被委以重任。 《象》曰:“在师中吉”,承天宠也;“王三锡命”,怀万邦也。【译】《象辞》说:“在军中任统帅,持中不偏可得吉祥,不会有什么灾祸”,表明承 受‘天命’,因此得到君王的宠幸;“君王多次进行奖励”,说明怀有治国平天下使万邦悦服的弘大志向。 六三,师或舆(yu)尸,凶。【译】六三,不时有士兵从战场上运送战死者的尸体回来,凶险。 ￼￼《象》曰:“师或舆尸”,大无功也。【译】《象辞》说:“士兵不时运送战死者的尸体回来”,说明不能知己知彼,在敌强 我弱的情况下,不自量力发动进攻,结果战败,没有任何功绩可言了。 六四,师左次,无咎。【译】六四,率军暂时撤退,免得遭受损失。 《象》曰:“左次无咎”,示失常也。【译】《象辞》说“观察了战场形势后,暂时后退以避敌精锐,免遭更大损失”。说明 深通兵法,懂得用兵有进有退的常理。 六五,田有禽,利执言,无咎;长子帅师,弟子舆尸,贞凶。【译】六五,田野中有野兽出没,率军围猎捕获,不会有损失;委任德高望重的长者 为军中主帅,必将战无不胜,委任无德小人将运送着尸体大败回,占问的结果必然是凶 险的。 《象》曰:“长子帅师”,以中行也;“弟子舆尸”,使不当也。【译】《象辞》说:“委任有德长者统帅军队战无不胜”,表明居中恃正,行为有法度,必然获胜;“委任无德小人将运送着战死者的尸体,大败而归”,说明用人不当,必招致 大败,将自食恶果。 上六,大君有命,开国承家,小人勿用。【译】上六,凯旋而归,天子颁布了诏命,分封功臣,或封为诸侯,或封为上卿,或封为大夫,但小人决不可以重用。 《象》曰:“大君有命”,以正功也;“小人勿用”,必乱邦也。【译】《象辞》说:“天子颁布了诏命,分封功臣”,是为了按功劳大小而公正封赏。 “小人决不可以重用”,因为重用小人必然危害并扰乱邦国。"},{"title":"讼卦 | 易经","date":"2017-10-10T12:24:18.000Z","path":"2017/10/10/yi-6-song/","text":"讼:有孚窒惕,中吉;终凶,利见大人,不利涉大川。【译】《讼卦》象征打官司:这是因为诚实守信的德行被阻塞,心中畏惧有所戒备引 起,坚守正道居中不偏会有吉祥;坚持把官司打到底则有凶险,如有德高望重的大人物 出现则会有利,但出外远行、要渡过宽阔的大河则不会顺利。《象》曰:天与水违行,讼;君子以作事谋始。【译】《象辞》说《讼卦》的卦象是坎(水)下乾(天)上,为天在水上之表象。天 从东向西转动,江河百川之水从西向东流,天与水是逆向相背而行的,象征着人们由于 意见不合而打官司。所以君子在做事前要深谋远虑,从开始就要消除可能引起争端的因素。 初六,不永所事;小有言,终吉。【译】初六,不久将陷于争端之中;虽然会受到一些非难和指责,但终久将获得吉祥。 《象》曰:“不永所事”,讼不可长也;虽“小有言”,其辩明也。【译】《象辞》说:“不久陷于争端之中”,说明与人争端决不可长久,决不可互不让 步,相持不下;虽然“受到一些非难指责”,但通过摆事实讲道理,可以明辨事非。 九二,不克讼,归而逋(bu),其邑人三百户,无眚(sheng)。【译】九二,打官司失利,走为上策,赶快逃回来,跑到只有三百户人家的小国中, 在此居住可以避开灾祸。 《象》曰:“不克讼,归逋窜也”;自下讼上,患至掇(duo)也。【译】《象辞》说:“打官司失利,迅速逃回来”,因为自己处于下位,与上面有权有 势的人打官司,必然要失败而且有灾祸降临,但逃走避开,灾祸就没有了。 六三,食旧德,贞厉,终吉;或从王事,无成。【译】六三,安享着原有的家业,吃喝不愁,坚守正道,处处小心防备危险,终久会 获得吉祥;如果辅佐君王建功立业,成功后不归功于自己。 《象》曰“食旧德”,从上吉也。【译】《象辞》说:“安享着祖上遗留下来的家业”,说明只要顺从上级,则可以获得 吉祥的结果。 九四,不克讼;复即命,渝,安贞吉。【译】九四,打官司失利,经过反思改变了主意,决定不打官司了,安分守己,必然会得到吉利的结果。 《象》曰:“复即命,渝”,安贞不失也。【译】《象辞》说:“打官司失利后,回过头仔细反思,觉得‘和为贵’,还是息事宁 人为好,于是改变了主意,撤回诉状,退出争端不打官司了”,说明坚守正道,安分守 16 己就没有什么损失了。 九五,讼,元吉。【译】九五,官司得到了公正的判决,开始获得吉祥。 《象》曰:“讼,元吉”,以中正也。【译】《象辞》说:“官司得到公正的判决,开始获得吉祥”,表明此时居于正中地位, 得到了大人物的公正的判处。 上九,或锡之鞶(pan)带,终朝三褫(chi)之。【译】上九,因打官司获胜,君王偶然赏赐给饰有皮束衣带的华贵衣服,但在一天之 内却几次被剥下身来。 《象》曰:以讼受服,亦不足敬也。【译】《象辞》说:因为打官司获胜而得到赏赐,没有什么可以值得尊敬的。"},{"title":"需卦 | 易经","date":"2017-10-10T12:12:21.000Z","path":"2017/10/10/yi-5-xu/","text":"需:有孚,光亨,贞吉,利涉大川。【译】《需卦》象征等待:具有诚实守信的品德,光明正大,做事才会亨通顺利,占 12 问的结果是吉祥的,出外远行,渡过宽阔的河流会很顺利。 《象》曰:云上于天,需;君子以饮食宴乐。【译】《象辞》说:《需卦》的卦象是乾(天)下坎(水)上,为水在天上之表象。水 汽聚集天上成为云层,密云満天,但还没有下雨,需要等待;君子在这个时候需要吃喝, 饮酒作乐,即在等待的时候积蓄力量。 初九,需于郊,利用恒,无咎。【译】初九,在郊外等待,必须有恒心,长久耐心地静候时机,不会有什么祸患。 《象》曰:“需于郊”,不犯难行也;“利用恒,无咎”,未失常也。【译】《象辞》说:“在郊外等待”,表明不能冒险轻率前行;“长久耐心地等候时机, 不会有什么祸患”,表明没有偏离正道,没有偏离天地恒常之理。 九二,需于沙,小有言,终吉。【译】九二,在沙滩上等待,虽然要受到别人的一些非难指责,耐心等待终究会获得 吉祥。 《象》曰:“需于沙”,衍在中也;虽有小言,以终吉也。【译】《象辞》说:“在沙滩上等待”,表明宽宏大量不急躁;虽然受到一些非难和指 责,但终久能获得吉祥。 九三,需于泥,致寇至。【译】九三,在泥泞中等待,结果抢劫的强徒乘机而至。 ￼￼《象》曰:“需于泥”,灾在外也;自我致寇,敬慎不败也。【译】《象辞》说:“在泥泞中等待”,说明灾祸还在外面,尚未殃及本身;自己招引 来强盗,说明要处处谨慎小心才能避开危险。 六四,需于血,出自穴。【译】六四,在血泊中等待,不小心陷进深穴,用尽全力才逃脱出来。 《象》曰:“需于血”,顺以听也。【译】《象辞》说:“在血泊中等待”,表明此时必须沉着冷静,顺应时势,听天由命, 以等待转机。 九五,需于酒食,贞吉。【译】九五,准备好酒食招待客人,占问的结果是吉祥的。 《象》曰:“酒食贞吉”,以中正也。【译】《象辞》说:“准备好酒食招待客人,占问的结果是吉祥的”,说明此时处于中 位,完美无缺。 上六,入于穴,有不速之客三人来;敬之,终吉。【译】上六,落入了洞穴之中,忽然有不请自来的三位客人到来;对他们恭恭敬敬, 以礼相待,终久会得到吉祥的结果。 ￼￼《象》曰:“不速之客来,敬之终吉”。虽不当位,未大失也。【译】《象辞》说:“不请自来的三位客人到来,对他们恭敬而且热情地招待,终久获 得吉祥”,表明此时尽管处在不适当的地位,但还没有遭受大的损失。"},{"title":"蒙卦 | 易经","date":"2017-10-10T11:55:54.000Z","path":"2017/10/10/yi-4-meng/","text":"蒙:亨。匪我求童蒙,童蒙求我;初筮(shi)告,再三渎,渎则不告。利贞。【译】《蒙卦》象征启蒙:亨通。不是我有求于幼童,而是幼童有求于我,第一次向 我请教,我有问必答,如果一而再、再而三地没有礼貌地乱问,则不予回答。利于守正 道。 《象》曰:山下出泉,蒙;君子以果行育德。【译】《象辞》说:《蒙卦》的卦象是坎(水)下艮(山)上,为山下有泉水之表象, 但要想发现甘泉,必须设法准确地找出泉水的位置,即意味着先必须进行启蒙教育。君 子必须行动果断,才能培养出良好的品德。 初六,发蒙,利用刑人,用说桎梏;以往吝。【译】初六,要进行启蒙教育,贵在树立典型,以便防止罪恶发生;如不专心求学, 而是急功冒进,将来必然会后悔。 《象》曰:利用刑人,以正法也。【译】《象辞》说:用树立典型的办法来进行启蒙教育,是为了确立正确的法度,以便遵循。 九二,包蒙,吉。纳妇,吉;子克家。【译】九二,周围都是上进心很强的蒙童,希望获得知识,这是很吉利的。如果迎娶 新媳妇,也是吉祥的。由于渴望接受教育,上进心很强,所以连孩子们已经能够治家了。 《象》曰:“子克家”,刚柔接也。【译】《象辞》说:“由于渴望接受教育,上进心很强,所以连孩子们都已经能够治家 了”,这是因为刚柔相济,孩子们受到了很好的启蒙教育的结果。 六三,勿用取女,见金夫,不有躬,无攸利。【译】六三,不能娶这样的女子,她的心目中只有美貌的郎君,不能守礼仪,也难以 保住自己的节操,娶这样的女子是没有什么好处的。 《象》曰:“勿用取女”,行不顺也。【译】《象辞》说:“不能娶这个女子”,主要是指这个女子的行为是不合乎礼仪的, 即这个女子没有受过良好的启蒙教育。 六四,困蒙,吝。【译】六四,人处于困难的境地,不利于接受启蒙教育,因而孤陋寡闻,结果是不大 好的。 ￼￼《象》曰:“困蒙之吝”,独远实也。【译】《象辞》说:“人处于困难的境地,不利于接受启蒙教育”,是因为疏远有真才 实学的老师。 六五,童蒙,吉。【译】六五,蒙童虚心地向老师求教,这是很吉祥的。 《象》曰:“童蒙之吉”,顺以巽(xun)也。【译】《象辞》说:“蒙童虚心地向老师求教,这是很吉祥的”,这是因为蒙童对老师 采取了谦逊的态度。蒙童谦逊,则老师乐教,其教育结果自然是比较有效的,当然也是 吉祥的。 上九,击蒙,不利为寇,利御寇。【译】上九,启蒙教育要及早实行,要针对蒙童的缺点,先发治人。不要等到蒙童的 问题彻底暴露再去教育,而要防患于未然,事先进行启蒙教育。 《象》曰:“利用御寇”,上下顺也。【译】《象辞》说:“启蒙教育要及早实行,要针对蒙童的缺点,先发治人”,因为只 有这样,才能使老师和蒙童互相配合,才能达到治病救人、上下一心的目的。"},{"title":"屯卦 | 易经","date":"2017-10-10T11:43:58.000Z","path":"2017/10/10/yi-3-tun/","text":"屯(tun):元,亨,利,贞;勿用有攸往,利建侯。【译】《屯卦》象征初生:元始,亨通,和谐,贞正。不要急于发展,首先要立君建 国。《象》曰:云雷屯,君子以经纶。【译】《象辞》说:《屯卦》的卦象是震(雷)下坎(水)上,为雷上有水之表象,水 7 在上表示雨尚未落,故释为云。云雷大作,是即将下雨的征兆,故《屯卦》象征初生。 这里表示天地初创,国家始建,正人君子应以全部才智投入到创建国家的事业中去。 初九,磐(pan)桓,利居贞,利建侯。【译】初九,万事开头难,在初创时期困难特别大,难免徘徊不前,但只要能守正不 阿,仍然可建功立业。 《象》曰:虽磐桓,志行正也。以贵下贱,大得民也。【译】《象辞》说:虽然徘徊不前,但志向和行为纯正。只要能下定决心,深入基层, 仍然会大得民心的。 六二,屯如邅(zhan)如,乘马班如。匪寇婚媾(gou),女子贞不字,十年乃字。【译】六二,为难而团团转,乘马旋转不进,不是盗寇,是来求婚的。女子贞静自守, 不嫁人,要过十年才许嫁。 《象》曰:六二之难,乘刚也。“十年乃字”,反常也。【译】《象辞》说:六二爻之所以出现困难,是由于阳刚一方所造成的。“十年才许 嫁”,是很反常的现象。 六三,即鹿无虞,惟入于林中,君子几,不如舍,往吝。【译】六三,追逐鹿时,由于缺少管山林之人的引导,致使鹿逃入树林中去。君子此 时如仍不愿舍弃,轻率地继续追踪,则必然会发生祸事。 ￼￼《象》曰:“即鹿无虞”,以从禽也。君子舍之,往吝穷也。【译】《象辞》说:“追逐鹿缺少管山林之人引导”,是因为获鹿之心过于急切。君子 应及时放弃,否则必有祸事或导致穷困。 六四,乘马班如,求婚媾,往吉,无不利。【译】六四,四马前进,步调不一,但如坚定不移地去求婚,则结果必然是吉祥顺利 的。 《象》曰:求而往,明也。【译】《象辞》说:坚定不移地去追求,是明智之举。 九五,屯其膏,小贞吉,大贞凶。【译】九五,只顾自己囤积财富而不注意帮助别人,是很危险的,那样做,办小事虽 有成功的可能,但办大事则必然会出现凶险。 《象》曰:“屯其膏”,施未光也。【译】《象辞》说:“只顾自己囤积财富而不注意帮助别人”,这样的人即使想有所作 为,其前景也不大光明。 上六,乘马班如,泣血涟如。【译】上六,四马前进,步调不一,进退两难,悲伤哭泣,泣血不止。 《象》曰:“泣血涟如”,何可长也?【译】《象辞》说:“悲伤哭泣,泣血不止”,这种状况怎能维持长久呢?"},{"title":"坤卦 | 易经","date":"2017-10-10T11:03:58.000Z","path":"2017/10/10/yi-2-kun/","text":"坤:元,亨,利牝(pin)马之贞。君子有攸往,先迷,后得主,利。西南得朋,东北丧朋。安贞吉。【译】《坤卦》象征地:元始,亨通,如果像雌马那样柔顺,则是吉利的。君子从事 某项事业,虽然开始时不知所从,但结果会是有利的。如往西南方,则会得到朋友的帮 助。如往东南方,则会失去朋友的帮助。如果保持现状,也是吉利的。《象》曰:地势坤,君子以厚德载物。【译】《象辞》说:坤象征大地,君子应效法大地,胸怀宽广,包容万物。 初六,履霜,坚冰至。【译】初六,脚踏上了霜,气候变冷,冰雪即将到来。 《象》曰:“履霜坚冰”,阴始凝也;驯致其道,至坚冰也。【译】《象辞》说:“脚踏上了霜,气候变冷,冰雪即将到来”,说明阴气开始凝聚;按照这种情况发展下去,必然迎来冰雪的季节。 六二,直方大,不习无不利。【译】六二,正直、端正、广大,具备这样的品质,即使不学习也不会有什么不利。 ￼￼《象》曰:六二之动,直以方也,“不习无不利”,地道光也。【译】《象辞》说:六二爻若是出现变化的话,总是表现出正直、端正的性质。“即使 不学习也不会有什么不利”,是因为地德广大,包容万物的缘故。 六三,含章可贞,或从王事,无成有终。【译】六三,胸怀才华而不显露,如果辅佐君主,能克尽职守,功成不居。 《象》曰:“含章可贞”,以时发也;“或从王事”,知光大也。【译】《象辞》说:“胸怀才华而不显露”,是要把握时机才发挥,“如果辅佐君主”, 必能大显身手,一展抱负。 六四,括囊(nang),无咎无誉。【译】六四,扎紧袋口,不说也不动,这样虽得不到称赞,但也免遭祸患。 《象》曰:“括囊无咎”,慎不害也。【译】《象辞》说:“扎紧袋口,不说也不动,可以免遭祸患”,说明小心谨慎从事, 是不会有害的。 六五,黄裳,元吉。【译】六五,黄色的衣服,最为吉祥。 《象》曰:“黄裳元吉”,文在中也。【译】《象辞》说:“黄色的衣服,最为吉祥”,是因为黄色代表中,行事以中道为准 6 则,当然是吉祥的。 上六,龙战于野,其血玄黄。【译】上六,阴气盛极,与阳气相战郊外,天地混杂,乾坤莫辨,后果是不堪设想的。 《象》曰:“龙战于野”,其道穷也。【译】《象辞》说:“阴气盛极,与阳气相战于郊外”,说明阴气已经发展到尽头了。 用六,利永贞。【译】“用六”这一爻,利于永远保持中正。 《象》曰:用六“永贞”,以大终也。【译】《象辞》说:用六的爻辞说“利于永远保持中正”,即是指阴盛到了极点就会向 阳转化。"},{"title":"乾卦 | 易经","date":"2017-10-10T07:55:26.000Z","path":"2017/10/10/yi-1-qian/","text":"乾:元,亨,利,贞。【译】《乾卦》象征天:元始,亨通,和谐,贞正。￼《象》曰:天行健,君子以自强不息。【译】《象辞》说:天道运行周而复始,永无止息,谁也不能阻挡,君子应效法天道, 自立自强,不停地奋斗下去。 初九,潜龙勿用。【译】初九,龙尚潜伏在水中,养精蓄锐,暂时还不能发挥作用。 《象》曰:潜龙勿用,阳在下也。【译】《象辞》说:龙象征阳。“龙尚潜伏在水中,养精蓄锐,暂时还不能发挥作用”, 是因为此爻位置最低,阳气不能散发出来的缘故。 九二,见龙在田,利见大人。【译】九二,龙已出现在地上,利于出现德高势隆的大人物。 《象》曰:“见龙在田”,德施普也。【译】《象辞》说:“龙已出现在地上”,犹如阳光普照,天下人普遍得到恩惠。 九三,君子终日乾乾,夕惕若,厉无咎(jiu)。【译】九三,君子整天自强不息,晚上也不敢有丝毫的懈怠,这样即使遇到危险也会 逢凶化吉。 《象》曰:“终日乾乾”,反复道也。【译】《象辞》说:“整天自强不息”,是因为要避免出现反复,不敢有丝毫大意。 九四,或跃在渊,无咎。【译】九四,龙或腾跃而起,或退居于渊,均不会有危害。 ￼￼《象》曰:“或跃在渊”,进无咎也。【译】《象辞》说:“龙或腾跃而起,或退居于渊,均不会有危害”,因为能审时度势, 故进退自如,不会有危害。 九五,飞龙在天,利见大人。【译】九五,龙飞上了高空,利于出现德高势隆的大人物。 《象》曰:“飞龙在天”,大人造也。【译】《象辞》说:“龙飞上了高空”,象征德高势隆的大人物一定会有所作为。 上九,亢(kang)龙有悔。【译】上九,龙飞到了过高的地方,必将会后悔。 《象》曰:“亢龙有悔”,盈不可久也。【译】《象辞》说“龙飞到了过高的地方,必将会后悔”,因为物极必反,事物发展到 了尽头,必将走向自己的反面。 用九,见群龙无首,吉。【译】用九,出现群龙也不愿意为首的现象,是很吉利的。 《象》曰:“用九”,天德不可为首也。【译】《象辞》说:“用九”的爻象说明,天虽生万物,但却不居首、不居功。"},{"title":"初学 | 易经","date":"2017-10-10T07:12:45.000Z","path":"2017/10/10/yi-start/","text":"初步学习易经，记录要点与心得。易经，包括’经’与’传’两部分。‘经’包括六十四卦和三百八十四爻，及其说明(卦辞与爻辞)。‘传’，又称’十翼’，为孔子所作。 先天八卦“天地定位，山泽通气，雷风相薄，水火不相射，八卦想错。数往者顺，知来者逆，是故易逆数也”《说卦第二章》 后天八卦“帝出乎震，齐乎巽，相见乎离，致役乎坤，说言乎兑，战乎乾，劳乎坎，成言乎艮”《说卦第五章》 六十四卦由八经卦互组而成，爻从最低到最上，称”初，二，三，四，五，上”。另外，最顶两爻代表天，中间两爻代表人，最低两爻代表地。"},{"title":"Linux安装Git环境","date":"2017-10-09T07:43:41.000Z","path":"2017/10/09/linux-git-env/","text":"目标：为Linux服务器安装Git环境，配置安全协议SSH安装Git sudo apt-get update sudo apt-get install git 查看版本，检测是否安装成功 git --version 生成SSH KEY，默认安装(若有选择，按回车继续) ssh-keygen -t rsa -b 4096 -C lian1925@126.com 启动 ssh-agent: eval $(ssh-agent -s) 为 ssh-agent 添加 SSH key ssh-add ~/.ssh/id_rsa 获取 SSH KEY内容，填写到GitLab账号 $ pbcopy &lt; ~/.ssh/id_rsa.pub # Copies the contents of the id_rsa.pub file to your clipboard"},{"title":"Linux安装NodeJS环境","date":"2017-10-09T06:07:48.000Z","path":"2017/10/09/linux-node-env/","text":"目标：为Linux(Ubuntu)服务器，安装nodejs环境，用于运行JavaScript。安装nvm curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash 查看当前已安装哪些node版本 nvm ls 安装node nvm install v6.10.1 查看版本，测试是否安装成功 node -v npm -v 安装部署工具PM2 npm i -g pm2"},{"title":"Linux下处理MySQL错误","date":"2017-10-09T04:29:11.000Z","path":"2017/10/09/linux-mysql-error/","text":"目标：在Linux服务器部署，运行程序，对外提供服务时，MySQL数据库会遇到一些问题，现将实践遇到的问题及解决思路记录。1 mysqladmin flush-hosts 错误当后端程序试图连接MySQL，出现错误提示如下： root@iZwz92o5ndq3w3w5buade0Z:/home/helloExpress# node api.js 2017-10-09 12:23:29 api start. port:8080 (node:2888) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): Error: Host '120.25.192.73' is blocked because of many connection errors; unblock with 'mysqladmin flush-hosts' (node:2888) DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code. events.js:163 throw er; // Unhandled 'error' event ^ Error: Connection lost: The server closed the connection. at Socket.&lt;anonymous> (/home/helloExpress/node_modules/mysql2/lib/connection.js:111:35) at emitNone (events.js:91:20) at Socket.emit (events.js:188:7) at endReadableNT (_stream_readable.js:975:12) at _combinedTickCallback (internal/process/next_tick.js:80:11) at process._tickCallback (internal/process/next_tick.js:104:9) 解决方案停止MySQL的运行： sudo /etc/init.d/mysql stop 以安全模式进入： sudo mysqld_safe --skip-grant-tables &amp; 进入MySQL： mysql -uroot -p 显示当前最大错误连接数： show variables like '%max_connections%'; 修改连接数值 SET GLOBAL max_connect_errors=10000; 退出MySQL exit 重新安装mysql2 library npm i mysql2"},{"title":"书单","date":"2017-10-05T15:19:08.000Z","path":"2017/10/05/reading-list/","text":"宁静庭落，一方书桌，一缕清风，一杯淡茶，手捧一卷书，闲坐一傍晚，何其美哉。好书于我更甚美味佳肴，特将喜爱之书梳理纪念。 21天搞定电影剧本 美食祈祷恋爱 你的剧本逊毙了 深入理解计算机系统 太极拳体用全书 万物解释者 研究是一门艺术 富爸爸穷爸爸 别闹了，费曼先生 程序员的自我修养 代码大全 故事：材质、结构、风格和银幕剧作的原理 关键冲突：如何把人际关系危机转化为合作共赢 关键对话：如何高效沟通 影响力 哈佛非虚构写作课 解忧杂货店 经济史的趣味 奇特的一生 围城 人月神话 山海经 嫌疑人X的献身 小岛经济学 小王子 小说课:折磨读者的秘密 演讲的力量 一本小小的红色写作书 一本小小的蓝色逻辑书 JavaScript权威指南 JavaScript高级程序设计"},{"title":"博客添加评论功能","date":"2017-10-05T11:28:01.000Z","path":"2017/10/05/blog-comments-feature/","text":"目标：为博客添加评论功能，方便访客留言。 工具畅言，使用微信账号登录。 备案使用畅言评论，需要对域名进行备案。故于阿里云新买域名www.liangyl.top，进行绑定 企业邮箱腾讯免费企业邮箱，使用微信登录 在页面的合适位置引入评论代码此处需要填写id和key，在畅言的管理后台获取。 &lt;div id=\"SOHUCS\">&lt;/div> &lt;script type=\"text/javascript\"> (function(){ var appid = '您的appid'; var conf = '您的appkey'; var width = window.innerWidth || document.documentElement.clientWidth; if (width &lt; 960) { window.document.write('&lt;script id=\"changyan_mobile_js\" charset=\"utf-8\" type=\"text/javascript\" src=\"http://changyan.sohu.com/upload/mobile/wap-js/changyan_mobile.js?client_id=' + appid + '&amp;conf=' + conf + '\">&lt;\\/script>'); } else { var loadJs=function(d,a){var c=document.getElementsByTagName(\"head\")[0]||document.head||document.documentElement;var b=document.createElement(\"script\");b.setAttribute(\"type\",\"text/javascript\");b.setAttribute(\"charset\",\"UTF-8\");b.setAttribute(\"src\",d);if(typeof a===\"function\"){if(window.attachEvent){b.onreadystatechange=function(){var e=b.readyState;if(e===\"loaded\"||e===\"complete\"){b.onreadystatechange=null;a()}}}else{b.onload=a}}c.appendChild(b)};loadJs(\"http://changyan.sohu.com/upload/changyan.js\",function(){window.changyan.api.config({appid:appid,conf:conf})}); } })(); &lt;/script> 图片"},{"title":"博客添加图标样式","date":"2017-10-05T06:16:02.000Z","path":"2017/10/05/blog-icon-style/","text":"目标：为博客添加好看的图标样式，提示阅读体验。 图标库阿里巴巴矢量图标库,可以使用GitHub账号登录 第一步，在图标库中搜索所需的图标第二步，将选好的图标加入项目，如:blog第三步，在HTML和css文件中引用 获取项目生成的css文件链接，加入html文件的头部&lt;link rel=\"stylesheet\" href=\"//at.alicdn.com/t/font_407924_kx6yx3r9q4m6xbt9.css\"> 选择所需的图标，获取其class名字，应用于页面&lt;i class=\"iconfont icon-sousuo\">&lt;/i> blog项目图标参考搜索icon-sousuo微博icon-weibogithubicon-githubtwittericon-twitterfacebookicon-facebook斜线icon-xiexian1双箭头icon-shuangjiantou-copy"},{"title":"Nginx 502 错误","date":"2017-10-05T04:15:03.000Z","path":"2017/10/05/nginx-502-error/","text":"最近，部署于阿里云的服务接口，用户请求数据时遭遇502错误的困扰。本文用于记录解决该问题的经过。查看Nginx的错误日志error.log，记录如下：片段1 2017/10/05 11:50:51 [error] 6430#0: *1815 upstream prematurely closed connection while reading response header from upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/course_submit_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/course_submit_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 11:50:51 [error] 6430#0: *1809 upstream prematurely closed connection while reading response header from upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/submit_check HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/submit_check\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 11:50:51 [error] 6430#0: *1816 upstream prematurely closed connection while reading response header from upstream, client: 116.25.250.1, server: , request: \"POST /educate/auth/check_manager HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/auth/check_manager\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 11:50:51 [error] 6430#0: *1807 upstream prematurely closed connection while reading response header from upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/subscribe_state HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/subscribe_state\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 片段2 2017/10/05 09:44:51 [error] 6430#0: *1084 upstream prematurely closed connection while reading response header from upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/submit_check HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/submit_check\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 09:44:51 [error] 6430#0: *1083 upstream prematurely closed connection while reading response header from upstream, client: 116.25.250.1, server: , request: \"POST /educate/auth/check_manager HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/auth/check_manager\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 09:44:51 [error] 6430#0: *1064 recv() failed (104: Connection reset by peer) while reading response header from upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/subscribe_state HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/subscribe_state\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 09:44:51 [error] 6430#0: *1063 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/course_submit_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/course_submit_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 查看请求日志，记录如下： 116.25.250.1 - - [05/Oct/2017:11:52:56 +0800] \"POST /educate/user/info HTTP/1.1\" 200 441 \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" \"wechatdevtools appservice port/9974\" 116.25.250.1 - - [05/Oct/2017:11:52:56 +0800] \"POST /educate/manager/course_list HTTP/1.1\" 200 5056 \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" \"wechatdevtools appservice port/9974\" 116.25.250.1 - - [05/Oct/2017:11:58:32 +0800] \"POST /educate/manager/course_list HTTP/1.1\" 200 5056 \"https://servicewechat.com/wx2ef86638fe2ab2eb/0/page-frame.html\" \"Mozilla/5.0 (iPhone; CPU iPhone OS 9_0 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13A342 MicroMessenger/6.5.18 NetType/4G Language/zh_CN\" 116.25.250.1 - - [05/Oct/2017:11:58:32 +0800] \"POST /educate/user/info HTTP/1.1\" 200 441 \"https://servicewechat.com/wx2ef86638fe2ab2eb/0/page-frame.html\" \"Mozilla/5.0 (iPhone; CPU iPhone OS 9_0 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13A342 MicroMessenger/6.5.18 NetType/4G Language/zh_CN\" 40.77.167.0 - - [05/Oct/2017:12:13:51 +0800] \"GET / HTTP/1.1\" 200 59 \"-\" \"Mozilla/5.0 (compatible; bingbot/2.0; +http://www.bing.com/bingbot.htm)\" 103.206.22.250 - - [05/Oct/2017:12:23:13 +0800] \"GET http://azenv.net/ HTTP/1.1\" 200 28 \"-\" \"Mozilla/5.0 (compatible; MSIE 6.0; Windows NT 5.1; Trident/5.0)\" 103.206.22.250 - - [05/Oct/2017:12:23:13 +0800] \"CONNECT www.baidu.com:443 HTTP/1.1\" 400 181 \"-\" \"-\" 方案一，将代理服务的失效时间延长 proxy_connect_timeout 600; proxy_send_timeout 600; proxy_read_timeout 600; send_timeout 600; 方案二，添加缓存功能 proxy_cache_path /home/nginx_cache_dir levels=1:2 keys_zone=cache_one:100m inactive=60m max_size=5g ; location / { proxy_cache_valid 200 302 1h; proxy_cache_valid 301 1d; proxy_cache_valid any 1m; proxy_cache cache_one; expires 10m; add_header X-Proxy-Cache $upstream_cache_status; } 方案三，增加缓存空间，延长时间 keepalive_timeout 600; types_hash_max_size 2048; fastcgi_buffers 8 16k; fastcgi_buffer_size 32k; fastcgi_connect_timeout 300; fastcgi_send_timeout 300; fastcgi_read_timeout 300; 新增报错日志：片段3 2017/10/05 15:46:59 [error] 23492#0: *585 upstream prematurely closed connection while reading response header from upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/info HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/info\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *552 upstream prematurely closed connection while reading response header from upstream, client: 116.25.250.1, server: , request: \"POST /educate/manager/course_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/manager/course_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/info HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/info\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *585 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/manager/course_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/manager/course_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/info HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/info\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *585 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/manager/course_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/manager/course_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *585 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/info HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/info\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/manager/course_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/manager/course_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/info HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/info\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *585 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/manager/course_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/manager/course_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *585 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/info HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/info\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/manager/course_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/manager/course_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\"2017/10/05 15:46:59 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/info HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/info\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:46:59 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/manager/course_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/manager/course_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:47:00 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/info HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/info\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:47:00 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/manager/course_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/manager/course_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:47:00 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/user/info HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/user/info\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" 2017/10/05 15:47:00 [error] 23492#0: *552 connect() failed (111: Connection refused) while connecting to upstream, client: 116.25.250.1, server: , request: \"POST /educate/manager/course_list HTTP/1.1\", upstream: \"http://127.0.0.1:8080/educate/manager/course_list\", host: \"www.luobocode.com\", referrer: \"https://servicewechat.com/wx2ef86638fe2ab2eb/devtools/page-frame.html\" nginx参考配置文件： events { worker_connections 768; # multi_accept on; } http { access_log /var/log/nginx/access.log; error_log /var/log/nginx/error.log; proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m; proxy_temp_path /var/tmp; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; gzip on; gzip_comp_level 6; gzip_vary on; gzip_min_length 1000; gzip_proxied any; # gzip_types text/plain text/html text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript; gzip_buffers 16 8k; # ssl_certificate /some/location/luobocode.com.bundle.crt; # ssl_certificate_key /some/location/luobocode.com.key; # ssl_protocols SSLv3 TLSv1; # ssl_ciphers HIGH:!aNULL:!MD5; upstream www.luobocode.com { server 127.0.0.1:8080; keepalive 64; } # server { # listen 80; # rewrite ^(.*) https://$host$1 permanent; # } server { listen 80; listen [::]:80; server_name www.luobocode.com; return 301 https://www.luobocode.com$request_uri; } server { listen 443 ssl; listen [::]:443 ssl; server_name www.luobocode.com; ssl on; ssl_certificate 1_www.luobocode.com_bundle.crt; ssl_certificate_key 2_www.luobocode.com.key; ssl_session_timeout 5m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置 ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置 ssl_prefer_server_ciphers on; location / { proxy_redirect off; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header Host $http_host; proxy_set_header X-NginX-Proxy true; proxy_set_header Connection \"\"; proxy_http_version 1.1; proxy_cache one; proxy_cache_key sfs$request_uri$scheme; proxy_pass http://www.luobocode.com; } } }"},{"title":"博客添加代码高亮特性","date":"2017-10-04T21:15:19.000Z","path":"2017/10/05/blog-code-highlight-feature/","text":"目标：为博客添加代码高亮特性，让代码部分的观赏性加分。 工具hexo-prism-plugin 安装npm i -S hexo-prism-plugin 配置在博客的配置文件_config.yml，加入配置语句： prism_plugin: mode: 'preprocess' # realtime/preprocess theme: 'duotone-light' line_number: false # default false 禁止默认 highlight配置： highlight: enable: false 修改样式将代码块设为圆角，添加浅浅边框，修改后视觉效果更加柔和美观。这里我们只需要修改pre选项，因为所有的代码块都包含在pre节点内,为避免干扰其他使用pre的样式，可加.page前缀。 .page pre { border: 1px solid rgba(0, 0, 0, 0.3); border-radius: 10px; } 清除缓存并启动hexo clean hexo s"},{"title":"网络存储","date":"2017-10-03T12:05:03.000Z","path":"2017/10/03/web-storage/","text":"设备 威联通（QNAP）TS-231P 1G 内存 2盘位NAS网络存储器 双核1.7GHz处理器 2个网络端口 初始化安装"},{"title":"博客实现搜索功能","date":"2017-10-02T16:10:09.000Z","path":"2017/10/03/blog-search-feature/","text":"目标：为博客添加搜索功能，方便用户快速查找对应的文章。实现搜索功能，有两种途径：1）使用第三方搜索公司提供的服务；2）通过自己获取网站数据和关键字匹配，实现搜索功能 第三方服务Algolia可采用Github账号登录使用 自定义搜索功能第一步，我们要获取博客网站的数据，放入文件中，作为搜索功能的数据源。对此我们选用的工具是：hexo-generator-json-content安装方式： npm i -S hexo-generator-json-content 配置在博客配置 _config.yml,添加上面插件的配置语句： jsonContent: meta: false pages: false posts: title: true date: true path: true text: true raw: false content: false slug: false updated: false comments: false link: false permalink: false excerpt: false categories: false tags: false 启动 hexo serve 将自动生成 content.json文件，格式如下： [{ //-> only published posts title: post.title, date: post.date, text: post.content, //-> only text minified ;) path: post.path }] 第二步，通过关键字，获取数据源中的匹配文章。这里我们将提供一个搜索函数search()，传入关键字，返回相匹配的文章列表。 function search(keywords){ // 关键字 => 正则，空格隔开的看作多个关键字 // a b c => /a|b|c/gmi var result = []; var regExp = new RegExp(key.replace(/[ ]/g, '|'), 'gmi'); loadData(function(data){ result = data.filter(function(post){ return matcher(post,regExp); }) }) } 定义数据源读取函数loadData() var searchData; function loadData(success) { if (!searchData) { var xhr = new XMLHttpRequest(); xhr.open('GET', '/content.json', true); xhr.onload = function() { if (this.status >= 200 &amp;&amp; this.status &lt; 300) { var res = JSON.parse(this.response || this.responseText); searchData = res instanceof Array ? res : res.posts; success(searchData); } else { console.error(this.statusText); } }; xhr.onerror = function() { console.error(this.statusText); }; xhr.send(); } else { success(searchData); } } 定义正则匹配函数 function matcher(post, regExp) { // 匹配优先级：title > tags > text return regtest(post.title, regExp) || post.tags.some(function(tag) { return regtest(tag.name, regExp); }) || regtest(post.text, regExp); } function regtest(raw, regExp) { regExp.lastIndex = 0; return regExp.test(raw); }"},{"title":"相册功能","date":"2017-09-22T08:31:58.000Z","path":"2017/09/22/gallery/","text":"目标：为博客添加酷炫的相册功能 工具PhotoSwipe 用法引入js和css文件 &lt;!-- Core CSS file --> &lt;link rel=\"stylesheet\" href=\"path/to/photoswipe.css\"> &lt;!-- Skin CSS file (styling of UI - buttons, caption, etc.) In the folder of skin CSS file there are also: - .png and .svg icons sprite, - preloader.gif (for browsers that do not support CSS animations) --> &lt;link rel=\"stylesheet\" href=\"path/to/default-skin/default-skin.css\"> &lt;!-- Core JS file --> &lt;script src=\"path/to/photoswipe.min.js\">&lt;/script> &lt;!-- UI JS file --> &lt;script src=\"path/to/photoswipe-ui-default.min.js\">&lt;/script> 在页面合适的地方，放置photoswipe &lt;!-- Root element of PhotoSwipe. Must have class pswp. --> &lt;div class=\"pswp\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\"> &lt;!-- Background of PhotoSwipe. It's a separate element as animating opacity is faster than rgba(). --> &lt;div class=\"pswp__bg\">&lt;/div> &lt;!-- Slides wrapper with overflow:hidden. --> &lt;div class=\"pswp__scroll-wrap\"> &lt;!-- Container that holds slides. PhotoSwipe keeps only 3 of them in the DOM to save memory. Don't modify these 3 pswp__item elements, data is added later on. --> &lt;div class=\"pswp__container\"> &lt;div class=\"pswp__item\">&lt;/div> &lt;div class=\"pswp__item\">&lt;/div> &lt;div class=\"pswp__item\">&lt;/div> &lt;/div> &lt;!-- Default (PhotoSwipeUI_Default) interface on top of sliding area. Can be changed. --> &lt;div class=\"pswp__ui pswp__ui--hidden\"> &lt;div class=\"pswp__top-bar\"> &lt;!-- Controls are self-explanatory. Order can be changed. --> &lt;div class=\"pswp__counter\">&lt;/div> &lt;button class=\"pswp__button pswp__button--close\" title=\"Close (Esc)\">&lt;/button> &lt;button class=\"pswp__button pswp__button--share\" title=\"Share\">&lt;/button> &lt;button class=\"pswp__button pswp__button--fs\" title=\"Toggle fullscreen\">&lt;/button> &lt;button class=\"pswp__button pswp__button--zoom\" title=\"Zoom in/out\">&lt;/button> &lt;!-- Preloader demo http://codepen.io/dimsemenov/pen/yyBWoR --> &lt;!-- element will get class pswp__preloader--active when preloader is running --> &lt;div class=\"pswp__preloader\"> &lt;div class=\"pswp__preloader__icn\"> &lt;div class=\"pswp__preloader__cut\"> &lt;div class=\"pswp__preloader__donut\">&lt;/div> &lt;/div> &lt;/div> &lt;/div> &lt;/div> &lt;div class=\"pswp__share-modal pswp__share-modal--hidden pswp__single-tap\"> &lt;div class=\"pswp__share-tooltip\">&lt;/div> &lt;/div> &lt;button class=\"pswp__button pswp__button--arrow--left\" title=\"Previous (arrow left)\"> &lt;/button> &lt;button class=\"pswp__button pswp__button--arrow--right\" title=\"Next (arrow right)\"> &lt;/button> &lt;div class=\"pswp__caption\"> &lt;div class=\"pswp__caption__center\">&lt;/div> &lt;/div> &lt;/div> &lt;/div> &lt;/div> 初始化gallery var pswpElement = document.querySelectorAll('.pswp')[0]; // build items array var items = [ { src: 'https://placekitten.com/600/400', w: 600, h: 400 }, { src: 'https://placekitten.com/1200/900', w: 1200, h: 900 } ]; // define options (if needed) var options = { // optionName: 'option value' // for example: index: 0 // start at first slide }; // Initializes and opens PhotoSwipe var gallery = new PhotoSwipe( pswpElement, PhotoSwipeUI_Default, items, options); gallery.init(); 图片工具fancyBox3快速入门 &lt;!-- 1. Add latest jQuery and fancyBox files --> &lt;script src=\"//code.jquery.com/jquery-3.2.1.min.js\">&lt;/script> &lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.1.25/jquery.fancybox.min.css\" /> &lt;script src=\"https://cdnjs.cloudflare.com/ajax/libs/fancybox/3.1.25/jquery.fancybox.min.js\">&lt;/script> &lt;!-- 2. Create links --> &lt;a data-fancybox=\"gallery\" href=\"big_1.jpg\">&lt;img src=\"small_1.jpg\">&lt;/a> &lt;a data-fancybox=\"gallery\" href=\"big_2.jpg\">&lt;img src=\"small_2.jpg\">&lt;/a> &lt;!-- 3. Have fun! -->"},{"title":"Hello World","date":"2013-07-14T09:01:34.000Z","path":"2013/07/14/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new \"My New Post\" More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment"}]